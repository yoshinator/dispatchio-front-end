{"version":3,"sources":["adapters/ApiAdapter.js","actions/user.js","components/navigation/Navbar.js","components/About.js","components/navigation/Signup.js","components/navigation/Login.js","hocs/withAuth.js","actions/job.js","components/employee/JobUpdater.js","components/employee/Job.js","components/employee/Jobs.js","helpers/helpers.js","components/employee/JobsSearch.js","components/employee/Employee.js","hocs/withRoleManager.js","actions/team.js","components/jobs/Job.js","components/jobs/Jobs.js","components/manager/Manager.js","components/owner/Owner.js","actions/customer.js","components/Home.js","components/jobs/CreateJob.js","components/Locations.js","components/teams/Teams.js","components/teams/TeamMembers.js","components/customers/Customers.js","components/GoogleMap.js","components/Nomatch.js","components/customers/EditCustomer.js","components/customers/CreateCustomer.js","components/teams/EditTeamMember.js","components/teams/CreateTeamMember.js","components/teams/CreateTeam.js","components/teams/EditTeam.js","actions/companies.js","components/firstlogin/CreateCompany.js","components/firstlogin/JoinCompany.js","App.js","serviceWorker.js","reducers/types.js","reducers/loginReducer.js","reducers/companyReducer.js","reducers/jobReducer.js","reducers/teamReducer.js","reducers/teamMemberReducer.js","reducers/customerReducer.js","reducers/companiesReducer.js","store.js","index.js"],"names":["JSONAPIAdapter","endpoint","Object","classCallCheck","this","concat","headers","Accept","Content-Type","Authorization","localStorage","getItem","fetch","then","response","json","id","body","method","JSON","stringify","header","LOGINAdapter","CURRENTUserAdapter","USERAdapter","loginAction","email","password","console","log","dispatch","authenticatingUser","user","createItem","ok","JSONResponse","setItem","jwt","setCurrentUser","catch","r","e","type","payload","message","createUserAction","_ref","user_type","f_name","l_name","phone","company_id","location_id","updateUserAction","userId","updateItem","fetchCurrentUser","getAll","userData","logOutAction","EmployeeNavBar","props","react_default","a","createElement","Link","to","onClick","handleLogout","MainNavBar","connect","loginReducer","logout","window","clear","loggedIn","className","assign","htmlFor","About","Signup","state","pconfirm","passwordsMatch","_this","length","alert","handleSubmit","preventDefault","createUser","handleChange","target","value","setState","defineProperty","name","Redirect","onSubmit","autoComplete","onChange","placeholder","aria-describedby","checked","Component","_ref$loginReducer","failedLogin","error","Login","event","login","handleError","withAuth","WrappedComponent","AuthorizedComponent","_React$Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","role","React","mapDispatchToProps","JOBAdapter","JOBSAdapter","JOBUpdater","getEmployeeJobsAction","day","job","schedule_date","user_id","addWeekAction","week","JobUpdater","status","description","getCurrentFormattedTime","Date","toLocaleString","month","year","hour","minute","hour12","success","pos","time","crd","coords","userBody","lat","latitude","lon","longitude","upat","updateUser","getJobs","navigator","geolocation","getCurrentPosition","err","warn","code","rows","jobs","jobReducer","map","customer","href","city","rel","street_1","street_2","zip","employee_JobUpdater","Jobs","employee_Job","YOANHelpers","getWeek","i","setDate","getDate","push","getDay","dateTransform","date","dateArray","split","formatDateSlash","formatTime","timeArray","timeHelper","JobsSearch","parseInt","_entryDate","min","employee_Jobs","_ref2","location","es_Redirect","employee_JobsSearch","withRoleManager","TeamLocationAdapter","TeamMemberAdapter","TEAMAdapter","TEAMMEMBERAdapter","TEAMMEMBERREMOVALAdapter","getTeamsAction","locationId","team","getTeamMembersAction","Job","payment_type","paid","schedule_time","handleDateChange","team_id","updateJob","handleTimeChange","selectionOptionStatus","Fragment","selected","selectionOptionTeam","teams","selectionOptionPayment","paidRadioButtons","editingJob","getTeams","objectSpread","max","teamReducer","jobId","updateJobAction","YOANHelper","currentWeek","handleClick","filter","editJob","renderJobsJsx","createJobButton","createJobFlag","renderMain","jobForm","components_jobs_Job","addWeek","editJobAction","Manager","components_jobs_Jobs","Owner","CUSTOMERSAdapter","CUSTOMERAdapter","getCustomersAction","customers","getCustomers","getTeamMembers","employee_Employee","Manager_Manager","owner_Owner","CreateJob","customer_id","price","getCustomerOptions","getTeamOptions","createJob","customerReducer","createJobAction","Locations","TeamUsers","users","removeUser","teamId","getTeam","_ref2$teamReducer","editingTeam","creatingTeam","createTeamFlag","editTeamFlag","setTeam","setTeamAction","removeTeamMemberFromTeam","handleAdd","Teams_TeamUsers","teamsJsx","teamMembers","teamMemberReducer","setTeamMemberAction","teamMember","changeTeamMemberEditFlag","createNewTeamMemberFlag","teamMemberEditFlag","createTeamMemberFlag","team_members","now","Math","random","handleEdit","teamMembersJsx","editingCustomer","editCustomerFlag","editCustomer","addCustomerToEditAction","createNewCustomerFlag","createCustomerFlag","renderCustomers","mapStyles","width","height","float","KEY","process","REACT_APP_GOOGLEMAPKEY","GoogleMap","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","onClose","team_member","dist","google","zoom","style","initialCenter","lng","lastUpdated","visible","withRouter","take","GoogleApiWrapper","apiKey","Nomatch","pathname","EditCustomer","poc","CreateCustomer","createCustomer","_ref$customerReducer","createCustomerAction","EditTeamMember","updateTeamMember","updateTeamMemberAction","CreateTeamMember","password_c","createTeamMember","_ref$teamMemberReduce","CreateTeam","createTeam","_ref$teamReducer","EditTeam","member","addMemberToTeam","addMemberToTeamAction","COMPANIESAdapter","CreateCompany","company","website","nickname","handleChangeCompany","persist","prevState","handleChangeLocation","createCompany","minLength","pattern","locations","createCompanyAction","JoinCompany","companySearch","foundCompanies","chosenCompany","chosenLocation","findCompanies","companies","toLowerCase","includes","displayCompanies","selectCompany","find","selectLocation","updateUserLocation","getCompanies","size","defaultValue","JoinCompany_Locations","companiesReducer","navigation_Navbar","Switch","Route","path","exact","component","Home","render","teams_Teams","teams_TeamMembers","Customers","NoMatch","Boolean","hostname","match","ADD_LOCATION","initialState","JWTToken","undefined","action","toConsumableArray","slice","rootReducer","combineReducers","companyReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52fd5444.chunk.js","sourcesContent":["\nclass JSONAPIAdapter {\n  constructor(endpoint) {\n    this.endpoint = `https://dispatch-io.herokuapp.com/${endpoint}`\n    this.headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n    }\n  }\n  getAll() {\n    return fetch(this.endpoint,{\n      headers: this.headers\n    })\n      .then(response => response.json())\n  }\n  \n  getSingle(id) {\n    return fetch(`${this.endpoint}/${id}`)\n      .then(response => response.json())\n  }\n  // { key: 'value', key: { key: 'value', key: 'value'} }\n  createItem(body) {\n    return fetch(this.endpoint, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(body)// { key: 'value', key: { key: 'value', key: 'value'} }\n    })\n  }\n\n  deleteItem(id) {\n    return fetch(`${this.endpoint}/${id}`, {\n      method: 'DELETE',\n      header: this.headers\n    }).then(response => response.json())\n  }\n\n  updateItem(body, id) {\n    return fetch(`${this.endpoint}/${id}`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify(body)\n    })\n  }\n}\n\nexport default JSONAPIAdapter;\n\n","import JSONAPIAdapter from '../adapters/ApiAdapter'\nconst LOGINAdapter = new JSONAPIAdapter(\"api/v1/users/login\");\nconst CURRENTUserAdapter = new JSONAPIAdapter(\"api/v1/users/current\")\nconst USERAdapter = new JSONAPIAdapter(\"api/v1/users\")\n\n\n\nexport const loginAction = (email, password) => {\n  console.log(password)\n  return  (dispatch) => { \n    // dispatch({ type: 'AUTHENTICATING_USER' })\n    dispatch(authenticatingUser())\n    const body = { user: {email: email, password: password}}\n    LOGINAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        } else {\n          throw response\n        }\n      })\n      .then(JSONResponse => {\n        localStorage.setItem('jwt', JSONResponse.jwt)\n        dispatch(setCurrentUser(JSONResponse.user));\n      })\n      .catch(r => r.json().then(e => dispatch({ type: 'FAILED_LOGIN', payload: e.message })))\n  }\n}\n\nexport const createUserAction = ({user_type, f_name, l_name, email, phone, password, company_id, location_id}) => {\n  return  (dispatch) => { \n    // dispatch({ type: 'AUTHENTICATING_USER' })\n    dispatch(authenticatingUser())\n    const body = { user: { user_type, f_name, l_name, email, phone, password, company_id, location_id}}\n//  debugger\n    USERAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(JSONResponse => {\n        // debugger;\n        localStorage.setItem(\"jwt\", JSONResponse.jwt);\n        dispatch(setCurrentUser(JSONResponse.user));\n      })\n      .catch(r =>\n        r\n          .json()\n          .then(e => dispatch({ type: \"FAILED_LOGIN\", payload: e.message }))\n      );\n  }\n}\n\n// IS THIS EVEN USED???? MIGHT BE HANDLED IN ./team.js\n// HAHA I'm using it now!\n  export const updateUserAction = (body, userId) => {\n    return (dispatch) => {\n      USERAdapter.updateItem(body, userId)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw response;\n          }\n        })\n        .then(JSONResponse => {\n          dispatch({ type: \"UPDATE_USER\", payload: JSONResponse });\n        });\n    }\n  }\n\nexport const fetchCurrentUser = () => {\n  // takes the token in localStorage and finds out who it belongs to\n  return (dispatch) => {\n    dispatch(authenticatingUser()) //tells the app we are fetching\n    CURRENTUserAdapter.getAll()\n      .then( response => {\n        return  dispatch(setCurrentUser(response))\n        })\n  }\n}\n\nexport const setCurrentUser = (userData) => ({\n  type: 'SET_CURRENT_USER',\n  payload: userData\n})\n\nexport const failedLogin = (errorMsg) => ({\n  type: 'FAILED_LOGIN',\n  payload: errorMsg\n})\n\nexport const logOutAction = () =>({\n  type: 'LOG_OUT'\n})\n\n// tell our app we're currently fetching\nexport const authenticatingUser = () => ({ type: 'AUTHENTICATING_USER' })\n// export const authenticatingUser = () => {\n//   return { type: 'AUTHENTICATING_USER' }\n// }","import React from 'react'\nimport {  Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logOutAction } from '../../actions/user'\nimport './Navbar.css'\n\nfunction EmployeeNavBar(props){\n  return <nav>\n    <ul>\n      <li>\n        <Link to=\"#\" onClick={() => props.handleLogout()}>\n          Log Out\n              </Link>\n      </li>\n    </ul>\n  </nav>\n}\n\nfunction MainNavBar(props){\n  return <nav>\n    <ul>\n      <li>\n        <Link to=\"/jobs\">Jobs</Link>\n      </li>\n      <li>\n        <Link to=\"/teams\">Teams</Link>\n      </li>\n      <li>\n        <Link to=\"/teammembers\">Team Members</Link>\n      </li>\n      <li>\n        <Link to=\"/customers\">Customers</Link>\n      </li>\n      <li>\n        <Link to=\"#\" onClick={() => props.handleLogout()}>\n          Log Out\n        </Link>\n      </li>\n    </ul>\n  </nav>\n}\n\nfunction Navbar(props) {\n\n  const handleLogout = () => {\n    window.localStorage.clear()\n    props.logout()\n  }\n\n  const logInToggle = () => {\n    if (props.loginReducer.loggedIn) {\n      return (\n      <header>\n          <h1 className=\"logo\"><Link to=\"/\">Dispatchio</Link></h1>\n        <input type=\"checkbox\" className=\"nav-toggle\" id=\"nav-toggle\" />\n          {props.loginReducer.user.user_type === \"employee\" ? <EmployeeNavBar {...props} handleLogout={handleLogout}/> : <MainNavBar {...props} handleLogout={handleLogout} />}\n        <label htmlFor=\"nav-toggle\" className=\"nav-toggle-label\">\n          <span></span> {/**Span must stay here for hamburger */}\n        </label>\n      </header>\n      )\n    } // END IF\n    else {\n      return (\n        <header>\n          <h1 className=\"logo\">Dispatchio</h1>\n          <input type=\"checkbox\" className=\"nav-toggle\" id=\"nav-toggle\" />\n          <nav>\n              <ul>\n                <li >\n                  <Link to=\"/login\">Login</Link>\n                </li>\n                <li >\n                  <Link to=\"/signup\">Sign Up</Link>\n                </li>\n              </ul>\n          </nav>\n          <label htmlFor=\"nav-toggle\" className=\"nav-toggle-label\">\n            <span></span>\n          </label>\n        </header>\n      )\n    }//END ELSE \n  }\n\n  //RETURN FOR Navbar\n  return logInToggle(props)\n\n}//END Navbar()\n\nconst mapStateToProps = ({loginReducer}) => ({\n  loginReducer\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return  {\n    logout: () => {\n    dispatch(logOutAction())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React from 'react'\n\nexport default function About() {\n  return (\n    <div className=\"card\">\n      <p >\n        Dispatchio is built for companies with a mobile workforce that need\n        to dispatch teams and keep track of jobs. Dispatchio helps you locate\n        your team members and get constant status updates about the jobs that\n        they are on.\n      </p>\n      <p >\n        Dispatchio also helps you manage your customers and keep a record of the jobs they have done. This is a pre beta release of Dispatchio that is totally free to use.\n      </p>\n      <p >\n      Please beware that this product is in development and might not always\n        be available. Also please be aware that while we don't intend on intentionally loosing data, because this product is in beta there is a possibility that you might loose your data if we have to update the\n      product in the future. If this happens we will try to give you ample time to save your data or we will try to export your data for you. </p>\n      <p >\n      As a beta user will have unlimitted access to\n        dispatchio once it goes into production as a thank you for helping us test\n        Dispatchio.\n      </p>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createUserAction } from '../../actions/user'\nimport { Redirect } from 'react-router'\nimport About from \"../About\"\n\nclass Signup extends Component{\n  state = {\n    user_type: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    location_id: 1,\n    pconfirm: \"\"\n  } \n\n  passwordsMatch = () => {\n    if(!this.state.password === this.state.pconfirm || this.state.password.length < 6){\n      alert(\"Passwords must match and be atleast 6 characters\")\n      return false\n    }\n    else return true\n    \n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    if (this.passwordsMatch()){\n      this.props.createUser(this.state)\n    }\n  }\n\n  handleChange = (e) => {\n    console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render(){\n    return this.props.loggedIn ? (\n      <Redirect to=\"/\" />) : \n      <div className=\"container\">\n        <div className=\"form-container\">\n          <div className=\"form\">\n            <form onSubmit={this.handleSubmit} autoComplete=\"one\">\n              <label htmlFor=\"sign-up-f-name\">First Name</label>\n              <input onChange={this.handleChange} type=\"text\" id=\"sign-up-f-name\" placeholder=\"First \" name=\"f_name\" value={this.state.f_name} />\n          \n              <label htmlFor=\"sign-up-l-name\">Last Name</label>\n              <input onChange={this.handleChange} type=\"text\" id=\"sign-up-l-name\" placeholder=\"Last \" name=\"l_name\" value={this.state.l_name} />\n\n              <label htmlFor=\"sign-up-email\">Email address</label>\n              <input onChange={this.handleChange} type=\"email\" id=\"sign-up-email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} />\n\n              <label htmlFor=\"input-password\">Password</label>\n              <input onChange={this.handleChange} type=\"password\" id=\"input-password\" placeholder=\"Password\" name=\"password\" value={this.state.password} />\n\n              <label htmlFor=\"input-password\">Password Confirmation</label>\n              <input onChange={this.handleChange} type=\"password\" id=\"input-password-confim\" placeholder=\"Confirm Password\" name=\"pconfirm\" value={this.state.pconfirm} />\n             \n              {/* USER TYPE RADIO BUTTONS  */}\n              <label>Pick a user type</label>\n              <div>\n                <input onChange={this.handleChange} type=\"radio\" name=\"user_type\" id=\"owner\" value=\"owner\" checked />\n                <label htmlFor=\"owner\">\n                  Owner\n                </label>\n              </div>\n              <div>\n                <input \n                  onChange={this.handleChange} \n                  type=\"radio\" name=\"user_type\" id=\"manager\" value=\"manager\"  \n                  />\n                <label htmlFor=\"manager\">\n                  Manager\n                </label>\n              </div>\n              <div>\n                <input onChange={this.handleChange} type=\"radio\" name=\"user_type\" id=\"employee\" value=\"employee\"/>\n                <label htmlFor=\"employee\">\n                  Employee\n                </label>\n              </div>\n\n            <button className=\"button\" type=\"submit\">\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </div>\n    <About />\n    </div>\n  }\n}\n\n\nconst mapStateToProps = ({ loginReducer: { user: authenticatingUser, failedLogin, error, loggedIn } }) => ({\n      authenticatingUser,\n      failedLogin,\n      error,\n      loggedIn\n    })  \n  \n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createUser: (user) => {\n      dispatch(createUserAction(user))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);\n\n","import React, {Component} from 'react'\nimport { connect } from  'react-redux'\nimport { Redirect } from 'react-router'\n\nimport { loginAction } from '../../actions/user'\nimport About from \"../About\"\n\nclass Login extends Component {\n  state ={ \n    email: \"\",\n    password: \"\"\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.login(this.state.email, this.state.password)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  \n  handleError = () => {\n    if(this.props.failedLogin) {\n      return <h3>\n          {this.props.error}\n        </h3>; \n    } else {\n      return null\n    }\n  }\n\n  render(){\n  //TODO ::::   CHECK LINE 70 loggedIn wrong state. Also this state is changing for almost every action is because of auth check? Investigate.\n    console.log(this.props.loggedIn)\n  return this.props.loggedIn ? (\n  <Redirect to=\"/\"/> ) : (\n    <div className=\"container\">\n        { this.handleError()}\n        <div className=\"form-container\"> \n          <h2>Login</h2>\n          <div className=\"form\">\n            <form onSubmit={this.handleSubmit} autoComplete=\"on\">\n\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input onChange={this.handleChange} type=\"email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" value={this.state.email} name=\"email\" />\n\n                <label htmlFor=\"input-password\">Password</label>\n                <input onChange={this.handleChange} type=\"password\" id=\"input-password\" placeholder=\"Password\" value={this.state.password} name=\"password\" autoComplete=\"password\" />\n\n                <button className=\"button\" type=\"submit\">Login</button>\n            </form>\n          </div>\n        </div>\n        <About />\n      </div>\n    )\n    \n  }\n}\n\n// TODO :::: For some reason when this component is rendered from the address bar loggedIn false so we do not redirect to home :(\nconst mapStateToProps = ({loginReducer: {user: authenticatingUser, failedLogin, error, loggedIn}}) => ({\n  authenticatingUser,\n  failedLogin,\n  error,\n  loggedIn\n})\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    login: (email, password) => {\n      dispatch(loginAction(email,password))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { fetchCurrentUser } from \"../actions/user\";\n\nconst withAuth = WrappedComponent => {\n  class AuthorizedComponent extends React.Component {\n    componentDidMount() {\n      console.log(\n        \"%c INSIDE COMPONENT DID MOUNT FOR AUTH HOC\",\n        \"color: purple\"\n      );\n      // POTENTIAL SECURITY FLAW!!! my tokens don't expire\n      if (localStorage.getItem(\"jwt\") && !this.props.loggedIn)\n        this.props.fetchCurrentUser();\n      // if i have a token but don't know who it belongs to, ask the server for that user's data\n    }\n\n    render() {\n      if (localStorage.getItem(\"jwt\") && this.props.loggedIn) {\n        //i have a token and i'm logged in\n        // wrapped component in our case is Profile\n        return <WrappedComponent />;\n      } else if (\n        localStorage.getItem(\"jwt\") &&\n        (this.props.authenticatingUser || !this.props.loggedIn)\n      ) {\n        //we're currently fetching, show a loading spinner\n        return <div role=\"status\">\n          <span>Loading...</span>\n        </div>\n      } else {\n        //user is not AUTHORIZED to see this component\n        return <Redirect to=\"/login\" />;\n      }\n    }\n  }\n\n  const mapStateToProps = state => {\n\n    return (\n      {\n      loggedIn: state.loginReducer.loggedIn,\n      authenticatingUser: state.loginReducer.authenticatingUser\n      }\n    )\n  };\n\n  // const mapDispatchToProps = /*FUNCTION*/ (dispatch) => {\n  //   return {\n  //     fetchCurrentUser: () => dispatch(fetchCurrentUser()), //dispatch is automagically provided by redux\n  //   }\n  // }\n\n  const mapDispatchToProps = { fetchCurrentUser: fetchCurrentUser };\n\n  // const connectedToReduxHOC = connect(mapStateToProps, mapDispatchToProps)\n  // const connectedAuthorizedComponent = connectedToReduxHOC(AuthorizedComponent)\n  // return connectedAuthorizedComponent\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AuthorizedComponent);\n};\n\nexport default withAuth;\n","//JOB ACTION CREATOR \nimport JSONAPIAdapter from '../adapters/ApiAdapter'\nconst JOBAdapter = new JSONAPIAdapter(\"api/v1/jobs/user_date\");\nconst JOBSAdapter = new JSONAPIAdapter(\"api/v1/jobs/week\");\nconst JOBUpdater = new JSONAPIAdapter(\"api/v1/jobs\")\n\n\n\n// ONLY FOR TO RENDER EMPLOYEE JOBS FOR THE DAY\nexport const getEmployeeJobsAction = (day, id) => {\n  return (dispatch) => {\n    dispatch({ type: 'AUTHENTICATING USER' })\n    const body = {\n        \"job\": {\n        \"schedule_date\": day,\n        \"user_id\": id\n      }\n    }\n\n    JOBAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        } else {\n          throw response\n        }\n      })\n      .then(JSONResponse => {\n          console.log(JSONResponse)\n          dispatch({type: \"GET_JOBS\", payload: JSONResponse})\n      })\n  }\n}// END getEmployeeJobsAction\n\n// takes a week array [1/19/2018,'1/20/2018',...,x/x/2018] and a location_id only for MANAGER and OWNER view.\nexport const addWeekAction = (week, location_id) => {\n  return (dispatch) => {\n  \n    const body = {\n      \"job\": {\n        \"week\": week,\n        \"location_id\": location_id\n      }\n    }\n    JOBSAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        } else {\n          throw response\n        }\n      })\n      .then(JSONResponse => {\n        dispatch({ type: \"GET_WEEK\", payload: JSONResponse })\n      })\n  }\n}\n\nexport const updateJobAction = (body, jobId) => {\n  return (dispatch) => {\n    JOBUpdater.updateItem(body, jobId)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(JSONResponse => {\n        dispatch({ type: \"UPDATE_JOB\", payload: JSONResponse });\n      });\n  }\n}\n\nexport const createJobAction = (body) => {\n  return dispatch => {\n    JOBUpdater.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(response.json());\n          throw response;\n        }\n      })\n      .then(r => {\n        dispatch({ type: \"CREATE_JOB\", payload: r });\n      });\n  }\n}\n\n// SETS THE JOB MANAGER AND EMPLOYEES ARE VIEWING TO EDIT OR CHANGE\nexport const editJobAction = (job) => {\n  return ({type: \"EDIT_JOB\", payload: job})\n}\n\nexport const createJobFlagAction = () =>{\n  return ({type: \"CREATE_JOB_FLAG\"})\n }","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { getEmployeeJobsAction } from '../../actions/job'\nimport { updateUserAction } from '../../actions/user'\nimport JSONAPIAdapter from '../../adapters/ApiAdapter'\nconst JOBAdapter = new JSONAPIAdapter(\"api/v1/jobs\")\n\nclass JobUpdater extends Component {\n  state ={\n    status: \"IR in route\",\n    description: \"\"\n    }\n\n  handleChange =(event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  getCurrentFormattedTime=()=>{\n    return new Date().toLocaleString(\"en-US\", {\n      month: \"numeric\",\n      day: \"numeric\",\n      year: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: \"true\"\n    })\n  }\n\n  //THIS IS WHERE WE NEED UPDATE THE DB\n  success = (pos) => {\n    const time = this.getCurrentFormattedTime();\n    \n    //methods available on crd: crd.latitude, crd.longtitude, crd.accuracy check console for others.\n    const crd = pos.coords;\n\n    const userBody = {\n      lat: crd.latitude,\n      lon: crd.longitude,\n      upat: time\n    }\n\n    this.props.updateUser(userBody, this.props.user.id)\n\n    const delimiter = \"\\n-------------------\\n\";\n\n    // Builds the body with status as the current status and description as the previous description plus the description that is being added with a time stamp and employee name.\n    const body = { status: this.state.status, description: this.props.job.description + delimiter + \" \\nUpdated at: \" + time + \" \\n  By: \" + this.props.user.f_name + \" \" + this.props.user.l_name + this.state.description + delimiter };\n\n    // What the hell is doing here rookie! Put it where it belongs.\n    JOBAdapter.updateItem(body, this.props.job.id)\n    .then(response => {if(response.ok)\n    {\n      this.props.getJobs(this.props.job.schedule_date, this.props.user.id)\n    }\n    else{\n      console.error(response.error)\n    }\n  })\n  }\n\n  //UPDATE HERE ALSO INCASE OF NAVIGATOR ISSUE <-- UPDATE? you mean DISPATCH\n  error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    navigator.geolocation.getCurrentPosition(this.success, this.error);\n  }\n  render() {\n    return <div>\n        <div>\n          <form onSubmit={this.handleSubmit} autoComplete=\"one\">\n            <div>\n              <label htmlFor=\"jobStatusSelect\">Change Status</label>\n              <select onChange={this.handleChange} name=\"status\" id={`jobStatusSelect${this.props.job.id}`}>\n                <option>IR in route</option>\n                <option>IP in progress</option>\n                <option>DN done</option>\n                <option>FU follow up</option>\n              </select>\n            </div>\n            <div>\n            <label htmlFor={`add-to-description${this.props.job.id}`}>Add to description</label>\n            <textarea onChange={this.handleChange} name=\"description\" id={`add-to-description${this.props.job.id}`} rows=\"2\" />\n            </div>\n            <button className=\"button\" type=\"submit\">\n              Update Job\n            </button>\n          </form>\n        </div>\n      </div>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.loginReducer.user\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getJobs: (day, user_id) => {\n      dispatch(getEmployeeJobsAction(day, user_id))\n    },\n    updateUser: (body, user_id) => {\n      dispatch(updateUserAction(body, user_id))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobUpdater)","import React from 'react'\nimport { connect } from \"react-redux\";\n\nimport JobUpdater from \"./JobUpdater\"\n\n\nconst Job = (props) =>  {\n\n    if (props.jobs){\n    return props.jobs.map(job => {\n      return (\n        <div className=\"card\" key={job.id}>\n          <div id={`heading${job.id}`}>\n            <h3 >\n              {job.status} {job.customer.name}</h3> \n              <a className=\"button\" href={`tel:+1${job.customer.phone}`}><i className=\"fas fa-mobile-alt\"></i> {job.customer.phone}</a>    \n              <h3>{job.city}</h3>\n          </div>\n\n          <div className=\"card-content\">\n            <p>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://maps.google.com/maps?q=${job.street_1},${job.street_2},+${job.city},+${job.state}+${job.zip}`}>\n                {`${job.street_1} ${job.street_2}, ${job.city}, ${job.state} ${job.zip} `}\n              </a>\n            </p>\n            <span>Description: {job.description}</span>\n              <JobUpdater job={job} />\n            </div>\n        </div>\n      );\n    })\n    }\n    else {\n      return (\n        < div >\n          <div id=\"headingOne\">\n            <h2 >\n              <button className=\"button\">\n                No Jobs\n              </button>\n            </h2>\n          </div>\n          </div>\n      )\n    }\n  }\n\n\nconst mapStateToProps = ({ jobReducer }) => ({\n  jobs: jobReducer.jobs\n})\n\nexport default connect(mapStateToProps)(Job);","import React from 'react'\nimport Job from './Job'\n\nconst Jobs = () => {\n  return <div><Job /></div>\n}\n\nexport default Jobs;","export default class YOANHelpers {\n  // Returns an array of weeks. \n  getWeek = () => {\n    const week = []\n    for (let i = 0; i < 7; i++) {\n      const day = new Date()\n      const a = new Date(day.setDate(day.getDate() + i))\n      week.push(a.toLocaleString(\n        \"en-US\",\n        {\n          month: \"numeric\",\n          day: \"numeric\",\n          year: \"numeric\"\n        }\n      ))\n    }\n    return week\n  }\n\n  getDay = () => {\n    const day = new Date()\n    return day.toLocaleString(\n      \"en-US\",\n      {\n        month: \"numeric\",\n        day: \"numeric\",\n        year: \"numeric\"\n      }\n    )\n  }\n\n  //takes a date in the format 1/9/2020 m/d/yyyy and return it in 2020-01-09 yyyy-mm-dd\n  dateTransform = date => {\n    const dateArray = date.split(\"/\")\n    if (dateArray[0].length === 1  ) dateArray[0] = `0${dateArray[0]}`\n    if (dateArray[1].length === 1) dateArray[1] = `0${dateArray[1]}`\n    return dateArray[2] + \"-\" + dateArray[0] + \"-\" + dateArray[1]\n  }\n\n  //dateTransform in reverse\n  formatDateSlash = date => {\n    const dateArray = date.split(\"-\")\n    if (dateArray[2][0]===\"0\") dateArray[2] = dateArray[2][1]\n    if (dateArray[1][0]===\"0\") dateArray[1] = dateArray[1][1]\n    return dateArray[1]+\"//\"+dateArray[2]+\"//\"+dateArray[0]\n\n  }\n\n  //takes an input in the form of 14:20 and returns 2:20 pm\n  formatTime = time => {\n    const timeArray = time.split(\":\")\n    return timeArray[0] - 12 > 0 ? `${timeArray[0] - 12}:${timeArray[1]} pm` : `${timeArray[0]}:${timeArray[1]} am`\n\n  }\n\n\n  //same return value as getDay above\n  // getFormattedDay = () => {\n  //   const day = new Date();\n  //   const year = day.toLocaleString(\"en-US\", {\n  //     year: \"numeric\"\n  //   });\n  //   const month = day.toLocaleString(\"en-US\", {\n  //     month: \"2-digit\"\n  //   });\n  //   const today = day.toLocaleString(\"en-US\", {\n  //     day: \"2-digit\"\n  //   });\n  //   return `${year}/${month}/${today}`\n  // }\n\n\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getEmployeeJobsAction} from '../../actions/job'\nimport Jobs from './Jobs'\nimport YOANHelpers from '../../helpers/helpers'\nconst timeHelper = new YOANHelpers();\n\n\n// THIS COMPONENT ONLY DISPLAYS FOR USERS OF TYPE EMPLOYEE\nclass JobsSearch extends React.Component {\n  state = {\n    date: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getJobs(timeHelper.getDay(), this.props.user.id);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.getJobs(this.state.date, this.props.user.id);\n  };\n\n  handleChange = event => {\n    const dateArray = event.target.value.split(\"-\");\n    const year = dateArray[0];\n    const month = parseInt(dateArray[1]) - 1;\n    const date = dateArray[2];\n    const _entryDate = new Date(year, month, date);\n    this.setState({\n      [event.target.name]: _entryDate.toLocaleString(\"en-US\", {\n        month: \"numeric\",\n        day: \"numeric\",\n        year: \"numeric\"\n      })\n    });\n  };\n\n  // THIS COMPONENT ONLY DISPLAYS FOR USERS OF TYPE EMPLOYEE\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"container\">\n        <div className=\"form-container\">\n          <h2>JOB SEARCH</h2>\n          <div className=\"form\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                onChange={this.handleChange}\n                type=\"date\"\n                name=\"date\"\n                min={timeHelper.dateTransform(timeHelper.getDay())}\n              />\n              <button className=\"button\" type=\"submit\">Submit</button>\n            </form>\n          </div>\n        <Jobs/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state)=> ({\n  user: state.loginReducer.user\n})\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    getJobs: (day, id) => {\n      dispatch(getEmployeeJobsAction(day, id))\n    }\n  }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)(JobsSearch);","import React from 'react'\nimport JobsSearch from './JobsSearch'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nfunction Employee({user}) {\n  if(user.location.id === 1){\n    return <Redirect to=\"/joincompany\"></Redirect>\n  }else {\n    return  <JobsSearch />\n  }\n}\n\n\nconst mapsStateToProps = ({loginReducer: {user}})=> {\n  return {\n    user\n  }\n}\n\nexport default connect(mapsStateToProps)(Employee)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nconst withRoleManager = WrappedComponent => {\n  class AuthorizedComponent extends React.Component {\n\n    render() {\n      if (this.props.user) {\n        if (this.props.user.user_type === \"manager\" || this.props.user.user_type === \"owner\") {\n   \n          return <WrappedComponent />;\n        }\n        } else {\n          //user is not AUTHORIZED to see this component\n          return <Redirect to=\"/\" />;\n        }\n    }\n  }\n\n  const mapStateToProps = state => {\n    return {\n      user: state.loginReducer.user\n    };\n  };\n\n  return connect(mapStateToProps)(AuthorizedComponent);\n};\n\nexport default withRoleManager;\n","import JSONAPIAdapter from \"../adapters/ApiAdapter\";\nconst TeamLocationAdapter = new JSONAPIAdapter('api/v1/teams/location');\nconst TeamMemberAdapter = new JSONAPIAdapter('api/v1/users/location');\nconst TEAMAdapter = new JSONAPIAdapter('api/v1/teams');\nconst TEAMMEMBERAdapter = new JSONAPIAdapter('api/v1/team_users')\nconst TEAMMEMBERREMOVALAdapter = new JSONAPIAdapter(\n  \"api/v1/team_users/remove\"\n);\nconst USERAdapter = new JSONAPIAdapter('api/v1/users');\n\n\nexport const getTeamsAction =(locationId) => {\n  return (dispatch) => {\n    const body = {\n      \"team\": {\n        \"location_id\": locationId\n\n      }\n    }\n    TeamLocationAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        } else {\n          throw response\n        }\n      })\n      .then(JSONResponse => {\n        console.log(\"TEAMS RESPONSE JSON\", JSONResponse)\n        dispatch({ type: \"GET_TEAMS\", payload: JSONResponse })\n      })\n    }\n}\n\nexport const getTeamMembersAction =(locationId) => {\n  return (dispatch) => {\n    const body = {\n      \"user\": {\n        \"location_id\": locationId\n      }\n    }\n    TeamMemberAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(JSONResponse => {\n        dispatch({ type: \"GET_TEAM_MEMBERS\", payload: JSONResponse });\n      });\n    }\n  }\n\n  export const changeTeamMemberEditFlagAction =() => {\n    return ({type: \"CHANGE_TEAM_MEMBER_EDIT_FLAG\"})\n  }\n\n\n  export const updateTeamMemberAction = (body, id) => {\n    return dispatch => {\n      USERAdapter.updateItem(body, id)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw response;\n          }\n        })\n        .then(JSONResponse => {\n          dispatch({ type: \"EDIT_TEAM_MEMBER\", payload: JSONResponse });\n        });\n    };\n  }\n//user object\nexport const createTeamMemberAction = ( user ) => {\n  return dispatch => {\n    USERAdapter.createItem(user)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw response;\n      }\n    })\n    .then(JSONResponse => {\n\n      dispatch({type: \"CREATE_TEAM_MEMBER\", payload: JSONResponse});\n    })\n  }\n}\n\nexport const createNewTeamMemberFlagAction =() => {\n  return { type: \"CREATE_TEAM_MEMBER_FLAG\" }\n}\n\n  export const setTeamMemberAction = (teamMember) => {\n  \n    return ({type: \"SET_TEAM_MEMBER\", payload: teamMember})\n  }\n\nexport const createTeamAction = (team) => {\n  return dispatch => {\n    TEAMAdapter.createItem(team)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(JSONResponse => {\n\n        dispatch({ type: \"CREATE_TEAM\", payload: JSONResponse });\n      })\n  }\n}\n\nexport const changeTeamEditFlagAction = () => {\n  return ({type: \"CHANGE_TEAM_EDIT_FLAG\"})\n}\n\nexport const addMemberToTeamAction =(body) => {\n  return dispatch => {\n    TEAMMEMBERAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(JSONResponse => {\n        dispatch({ type: \"EDIT_TEAM\", payload: JSONResponse });\n      })\n  }\n}\n//body = { user_id: userId, team_id: teamId}\nexport const removeTeamMemberFromTeam = (body) => {\n  return dispatch => {\n    TEAMMEMBERREMOVALAdapter.createItem(body)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(JSONResponse => {\n        dispatch({ type: \"EDIT_TEAM\", payload: JSONResponse });\n      });\n  };\n}\n\n  export const changeTeamCreateFlagAction =() => {\n    return ({ type: \"CHANGE_TEAM_CREATE_FLAG\"})\n  }\n\n  export const setTeamAction = (team) => {\n    return ({type: \"SET_TEAM\", payload: team})\n  }\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {Redirect} from 'react-router'\n\nimport { updateJobAction } from '../../actions/job';\nimport { getTeamsAction } from '../../actions/team';\nimport withAuth from '../../hocs/withAuth';\nimport withRoleManager from '../../hocs/withRoleManager';\nimport YOANHelpers from '../../helpers/helpers';\nimport './Job.css'\nconst timeHelper = new YOANHelpers();\n\n\nclass Job extends Component {\n  state = {\n    street_1: \"\",\n    street_2: \"\",\n    city: \"\",\n    zip: \"\",\n    description: \"\",\n    status: \"\",\n    payment_type: \"\",\n    paid: \"\",\n    schedule_time: \"\",\n    location_id: \"\",\n    date: \"\"\n  };\n\n  componentDidMount(){\n    //Gets the teams for the current location\n    this.props.getTeams(this.props.job.editingJob.location.id);\n    \n    this.setState({\n      date: timeHelper.dateTransform(this.props.job.editingJob.schedule_date)\n    });\n    this.setState({\n      ...this.state,\n      ...this.props.job.editingJob\n    });\n  } \n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleDateChange = event => {\n    const dateArray = event.target.value.split(\"-\");\n    const year = dateArray[0];\n    const month = parseInt(dateArray[1]) - 1;\n    const date = dateArray[2];\n    const _entryDate = new Date(year, month, date);\n    this.setState({\n      schedule_date: _entryDate.toLocaleString(\"en-US\", {\n        month: \"numeric\",\n        day: \"numeric\",\n        year: \"numeric\"\n      })\n    });\n    this.setState({\n      date: event.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const body = {\n      street_1: this.state.street_1,\n      street_2: this.state.street_2,\n      city: this.state.city,\n      state: this.state.state,\n      zip: this.state.zip,\n      description: this.state.description,\n      status: this.state.status,\n      payment_type: this.state.payment_type,\n      schedule_date: this.state.schedule_date,\n      schedule_time: this.state.schedule_time,\n      paid: this.state.paid,\n      team_id: this.state.team_id\n    };\n    this.props.updateJob(body, this.state.id);\n  };\n\n  handleTimeChange = (event) => {\n    console.log(\"%cHANDLETIME\", 'color:green', event.target.name, event.target.value);\n    \n  }\n\n  //PART OF FORM BUILDER RENDER RETURN\n  selectionOptionStatus = () => {\n    switch (this.state.status) {\n      case \"IR in route\":\n        return (\n          <>\n            <option selected=\"selected\">IR in route</option>\n            <option>IP in progress</option>\n            <option>DN done</option>\n            <option>FU follow up</option>\n          </>\n        );\n      case \"IP in progress\":\n        return (\n          <>\n            <option>IR in route</option>\n            <option selected=\"selected\">IP in progress</option>\n            <option>DN done</option>\n            <option>FU follow up</option>\n          </>\n        );\n      case \"DN done\":\n        return (\n          <>\n            <option>IR in route</option>\n            <option>IP in progress</option>\n            <option selected=\"selected\">DN done</option>\n            <option>FU follow up</option>\n          </>\n        );\n      case \"FU follow up\":\n        return (\n          <>\n            <option>IR in route</option>\n            <option>IP in progress</option>\n            <option>DN done</option>\n            <option selected=\"selected\">FU follow up</option>\n          </>\n        );\n      default:\n        return (\n          <>\n            <option>IR in route</option> <option>IP in progress</option>{\" \"}\n            <option>DN done</option> <option>FU follow up</option>\n          </>\n        );\n    }\n  };\n\n  selectionOptionTeam = () => {\n   return this.props.teams.map(team => {\n     if (team.id === this.state.team.id){\n       return <option value={team.id} selected = \"selected\" >{team.name}</option>\n     }\n       else {\n         return <option value={team.id}>{team.name}</option>\n\n       }\n    })\n  }\n\n  // PART OF FORM BUILDER IN RENDER RETURN\n  selectionOptionPayment = () => {\n    switch (this.state.payment_type) {\n      case \"CC Credit Card\":\n        return (\n          <>\n            <option selected=\"selected\">CC Credit Card</option>\n            <option>CH Cash</option>\n            <option>CK Check</option>\n            <option>INV Invoice</option>\n          </>\n        );\n      case \"CH Cash\":\n        return (\n          <>\n            <option>CC Credit Card</option>\n            <option selected=\"selected\">CH Cash</option>\n            <option>CK Check</option>\n            <option>INV Invoice</option>\n          </>\n        );\n      case \"CK Check\":\n        return (\n          <>\n            <option>CC Credit Card</option>\n            <option>CH Cash</option>\n            <option selected=\"selected\">CK Check</option>\n            <option>INV Invoice</option>\n          </>\n        );\n      case \"INV Invoice\":\n        return (\n          <>\n            <option>CC Credit Card</option>\n            <option>CH Cash</option>\n            <option selected=\"selected\">CK Check</option>\n            <option>INV Invoice</option>\n          </>\n        );\n      default:\n        return (\n          <>\n            <option selected=\"selected\">CC Credit Card</option>\n            <option>CH Cash</option>\n            <option>CK Check</option>\n            <option>INV Invoice</option>\n          </>\n        );\n    }\n  };\n\n  paidRadioButtons = () => {\n    if (this.state.paid === true || this.state.paid === \"true\") {\n      return (\n        <>\n          {this.props.job.editingJob.paid ? (\n            <div>This bill currently paid choose no to mark unpaid</div>\n          ) : (\n            <div />\n          )}\n          <div>\n            <input\n              onClick={this.handleChange}\n              type=\"radio\"\n              name=\"paid\"\n              id=\"paid1\"\n              value=\"true\"\n              checked\n            />\n            <label htmlFor=\"paid1\">\n              Yes\n            </label>\n          </div>\n          <div>\n            <input\n              onClick={this.handleChange}\n              type=\"radio\"\n              name=\"paid\"\n              id=\"paid2\"\n              value=\"false\"\n            />\n            <label htmlFor=\"paid2\">\n              No\n            </label>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          {this.props.job.editingJob.paid ? (\n            <div>This bill currently paid choose 'No' to mark unpaid</div>\n          ) : (\n            <div />\n          )}\n          <div>\n            <input\n              onChange={this.handleChange}\n              type=\"radio\"\n              name=\"paid\"\n              id=\"paid1\"\n              value=\"true\"\n              checked\n            />\n            <div></div>\n            <label htmlFor=\"paid1\">\n              Yes\n            </label>\n          </div>\n          <div>\n            <input\n              onChange={this.handleChange}\n              type=\"radio\"\n              name=\"paid\"\n              id=\"paid2\"\n              value=\"false\"\n              checked\n            />\n            <div></div>\n            <label htmlFor=\"paid2\">\n              No\n            </label>\n          </div>\n        </>\n      );\n    }\n  };\n\n  render() {\n    if (this.state.city || this.state.street_1){\n    return(\n      <div className=\"container\">\n        <div className=\"form-container\">\n          <h2>\n            {this.props.job.editingJob.city}, {this.props.job.editingJob.customer.name} {this.props.job.editingJob.customer.phone}, {this.props.job.editingJob.status}\n          </h2>\n          <div className=\"form\">\n            <form onSubmit={this.handleSubmit} autoComplete=\"one\">\n              \n                <label htmlFor=\"street_1\">Street 1</label>\n                <input onChange={this.handleChange} type=\"text\" name=\"street_1\" id=\"street_1\" value={this.state.street_1} />\n              \n                <label htmlFor=\"street_2\">Street 2</label>\n                <input onChange={this.handleChange} type=\"text\" name=\"street_2\" id=\"street_2\" value={this.state.street_2} />\n              \n                <label htmlFor=\"city\">City</label>\n                <input onChange={this.handleChange} type=\"text\" name=\"city\" id=\"city\" value={this.state.city} />\n              \n                <label htmlFor=\"state\">State</label>\n                <input onChange={this.handleChange} type=\"text\" name=\"state\" id=\"state\" value={this.state.state} />\n              \n                <label htmlFor=\"zip\">Zip</label>\n                <input onChange={this.handleChange} type=\"text\" name=\"zip\" id=\"zip\" value={this.state.zip} />\n              \n                <label\n                  htmlFor={`add-to-description${\n                    this.props.job.editingJob.id\n                  }`}\n                >\n                  Description\n                </label>\n                <textarea onChange={this.handleChange} name=\"description\" id={`add-to-description${this.props.job.id}`} rows=\"3\" value={this.state.description} />\n\n              <div>\n                Date: {this.state.schedule_date}\n                <label htmlFor=\"date\" />\n                <input onChange={this.handleDateChange} id=\"date\" value={this.state.date} type=\"date\" name=\"date\" min=\"\" max=\"\" />\n              </div>\n              <div>\n                Scheduled time: {timeHelper.formatTime(this.state.schedule_time)}\n                <label htmlFor=\"time\" />\n                <input onChange={this.handleChange} id=\"time\" value={this.state.schedule_time} type=\"time\" name=\"schedule_time\" min=\"\" max=\"\" />\n              </div>\n\n              <div>\n                <label htmlFor=\"jobStatusSelect\">Change Status</label>\n                <select onChange={this.handleChange} name=\"status\" id={`jobStatusSelect${this.props.job.editingJob.id}`} value={this.state.status}>\n                  {this.selectionOptionStatus()}\n                </select>\n              </div>\n\n              <div>\n                <label htmlFor=\"jobPaymentSelect\">\n                  Change Payment Type\n                </label>\n                <select onChange={this.handleChange} name=\"payment_type\" id={`jobPaymentSelect${this.props.job.editingJob.id}`} value={this.state.payment_type}>\n                  {this.selectionOptionPayment()}\n                </select>\n              </div>\n\n              <div>\n                <label htmlFor=\"jobPaymentSelect\">\n                  Change team\n                </label>\n                <select onChange={this.handleChange} name=\"team_id\" id={`teamSelect${this.props.job.editingJob.id}`} >\n                  {this.selectionOptionTeam()}\n                </select>\n              </div>\n\n              <div className=\"paid\">\n                <label htmlFor=\"paid\">Paid? </label>\n                {this.paidRadioButtons()}\n              </div>\n\n              <button className=\"button\" type=\"submit\">\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n      )\n    }\n    else return <Redirect to=\"/\"></Redirect>\n  }\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n return {\n   updateJob: (body, jobId) => {\n     dispatch(updateJobAction(body, jobId))\n    },\n   getTeams: (location_id) => {\n     dispatch(getTeamsAction(location_id));\n   }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    job: state.jobReducer,\n    teams: state.teamReducer.teams\n  }\n}\n \nexport default withRoleManager(withAuth(connect(mapStateToProps, mapDispatchToProps)(Job)))\n\n\n","//JOBS COMPONENT FOR MANAGERS AND OWNERS NOT FOR EMPLOYEES\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport { editJobAction, addWeekAction, createJobFlagAction } from '../../actions/job'\nimport withRoleManager from '../../hocs/withRoleManager'\nimport YOANHelpers from '../../helpers/helpers'\nimport Job from './Job'\nimport './Jobs.css'\n\nconst YOANHelper = new YOANHelpers();\n\n\nclass Jobs extends Component {\nstate = {\n  currentWeek: YOANHelper.getWeek()\n}\n\n  componentDidMount(){\n    this.props.addWeek(this.state.currentWeek, this.props.user.location.id);\n  }\n\n\n  handleClick = (id) => {\n    const job = this.props.jobs.jobs.filter(job => job.id === id)\n    this.props.editJob(job[0])\n  }\n\n  // Takes a day as a string in the form \"1/25/1990\" \n  renderJobsJsx = (day) => {\n    const filteredJobs = this.props.jobs.jobs.filter(job => job.schedule_date === day)\n    return filteredJobs.map(job => {\n      return (<>\n        <div className=\"card-content\"  key={job.id}>\n          <p className=\"button\" onClick={() => this.handleClick(job.id)} > {job.city} {job.customer.name} </p>\n          <a className=\"button\" href={`tel:+1${job.customer.phone}`}><i className=\"fas fa-mobile-alt\"></i> {job.customer.phone}</a>\n          </div>\n        </>\n      )\n    })\n  }\n\n  createJobButton =() => {\n    this.props.createJobFlag()\n  }\n\n  renderMain = () => {\n    if (!this.props.jobs.jobForm){\n      return this.state.currentWeek.map(day => {\n        return <div key={day} className=\"card\">\n              <span>{day}{\" \"}</span>\n              {this.renderJobsJsx(day)}\n            </div>\n      });\n    }else {\n     return (\n       <>\n         <Job />\n       </>\n     )\n    }\n  }\n\n  render() {\n\n    if(this.props.user.location.id === 1 && this.props.user.user_type === \"owner\"){\n      return <Redirect to=\"/createcompany\"></Redirect>\n    } else if (this.props.user.location.id === 1 && this.props.user.user_type === \"manager\"){\n      return <Redirect to=\"/joincompany\"></Redirect>\n    }\n    if(this.props.jobs.createJobFlag){\n      return <Redirect to=\"/createjob\"></Redirect>\n    } else {\n    return (\n        <div className=\"container\">\n            <i className=\"fas fa-arrow-alt-circle-left\"/>\n            <h2>Jobs</h2>\n            <i className=\"fas fa-arrow-alt-circle-right\"/>\n            <div className=\"card\">{this.renderMain()}</div>\n            <button className=\"button\" onClick={this.createJobButton}>Create New Job</button>\n          </div>\n    )\n    }\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    jobs: state.jobReducer,\n    user: state.loginReducer.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return { \n      addWeek: (week, location_id) => {\n        dispatch(addWeekAction(week, location_id))\n      },\n      editJob: (job) => {\n        dispatch(editJobAction(job))\n      },\n      createJobFlag: () => {\n         dispatch(createJobFlagAction())\n      }\n    };\n}\n\nexport default withRoleManager(connect(mapStateToProps, mapDispatchToProps)(Jobs))","import React, { Component } from 'react'\nimport Jobs from \"../jobs/Jobs\";\n\nexport default class Manager extends Component {\n  render() {\n    return <Jobs />;\n  }\n}\n","import React from 'react'\nimport Jobs from '../jobs/Jobs'\n\nconst Owner = () => {\n    return  <Jobs />\n}\n\nexport default Owner","// CUSTOMER ACTION CREATOR\nimport JSONAPIAdapter from \"../adapters/ApiAdapter\";\nconst CUSTOMERSAdapter = new JSONAPIAdapter('api/v1/customers/location');\nconst CUSTOMERAdapter = new JSONAPIAdapter('api/v1/customers')\n\nexport const getCustomersAction =(locationId) => {\n  return (dispatch) => {\n    const body = {\n      \"customers\": {\n        \"location_id\": locationId\n      }\n    }\n    CUSTOMERSAdapter.createItem(body)\n    .then(response => {\n      if (response.ok) {\n        return response.json()\n      } else {\n        throw response\n      }\n    })\n    .then(JSONResponse => {\n      dispatch({ type: \"GET_CUSTOMERS\", payload: JSONResponse })\n    })\n  }\n}\n\nexport const editCustomerAction = (body, id) => {\n  return dispatch => {\n    CUSTOMERAdapter.updateItem(body, id)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(response.json())\n          throw response;\n        }\n      })\n      .then(JSONResponse => {\n        dispatch({ type: \"EDIT_CUSTOMER\", payload: JSONResponse });\n      });\n  };\n};\n\nexport const createCustomerAction = (body) => {\n  return dispatch => {\n    CUSTOMERAdapter.createItem(body)\n    .then(response => {\n      if (response.ok ){\n        return response.json();\n      } else {\n        console.log(response.json())\n        throw response;\n      }\n    })\n    .then(r => {\n        dispatch({type: \"CREATE_CUSTOMER\", payload: r})\n    } )\n  }\n}\n\n\nexport const addCustomerToEditAction =(customer) => {\n  return { type: \"ADD_CUSTOMER_TO_EDIT\" , payload: customer}\n} \n\nexport const editCustomerFlagAction = () => {\n  return { type: \"EDIT_CUSTOMER_FLAG\"}\n}\n\nexport const createNewCustomerFlagAction = () => {\n  return { type: \"CREATE_CUSTOMER_FLAG\"}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport withAuth from '../hocs/withAuth'\n\nimport Employee from './employee/Employee'\nimport Manager from './manager/Manager';\nimport Owner from './owner/Owner';\nimport YOANHelpers from '../helpers/helpers';\nimport { addWeekAction } from '../actions/job'\nimport { getCustomersAction } from '../actions/customer';\nimport { getTeamsAction, getTeamMembersAction } from '../actions/team'\n\nconst timeHelper = new YOANHelpers ();\n\nfunction Home (props) {\n\n  props.addWeek(timeHelper.getWeek(), props.user.location.id)\n  props.getCustomers(props.user.location.id)\n  props.getTeams(props.user.location.id)\n  props.getTeamMembers(props.user.location.id)\n\n  console.log(props.user)\n\n  switch(props.user.user_type){\n    case \"employee\":\n      return <Employee />;\n    case \"manager\":\n      return <Manager />;\n    case \"owner\":\n      return <Owner />;\n      default:\n        return <div></div>\n  }\n\n}\n\nconst mapStateToProps = ( {loginReducer: {user}} ) => ({\n   user\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addWeek: (week, location_id) => {\n      dispatch(addWeekAction(week, location_id))\n    }, \n    getCustomers: (locationId) => {\n      dispatch(getCustomersAction(locationId))\n    },\n    getTeams: (locationId) => {\n      dispatch(getTeamsAction(locationId))\n    },\n    getTeamMembers: (locationId) => {\n      dispatch(getTeamMembersAction(locationId));\n    }\n  }\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(Home));\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport withAuth from '../../hocs/withAuth';\nimport withRoleManager from '../../hocs/withRoleManager';\nimport { createJobAction } from '../../actions/job'\nimport YOANHelpers from \"../../helpers/helpers\";\nconst timeHelper = new YOANHelpers();\n\nclass CreateJob extends Component {\n\n  state = {\n    customer_id: \"\",\n    location_id: \"\",\n    team_id: \"\",\n    street_1: \"\",\n    street_2: \"\",\n    city: \"\",\n    zip: \"\",\n    state: \"\",\n    price: \"\",\n    schedule_date: \"\",\n    schedule_time: \"\",\n    description: \"\",\n    date: \"\"\n  }\n\n  componentDidMount() {\n    this.setState({\n      location_id: this.props.user.location.id,\n      date: timeHelper.getDay()\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleDateChange = event => {\n    const dateArray = event.target.value.split(\"-\");\n    const year = dateArray[0];\n    const month = parseInt(dateArray[1]) - 1;\n    const date = dateArray[2];\n    const _entryDate = new Date(year, month, date);\n    this.setState({\n      schedule_date: _entryDate.toLocaleString(\"en-US\", {\n        month: \"numeric\",\n        day: \"numeric\",\n        year: \"numeric\"\n      })\n    });\n    this.setState({\n      date: event.target.value\n    });\n  };\n\n  getCustomerOptions = () => {\n    return this.props.customers.map(customer => {\n      return <option key={customer.id} value={customer.id}> {customer.name}, {customer.city}</option >\n    })\n  }\n\n  getTeamOptions = () => {\n    return this.props.teams.map(team => {\n      return <option key={team.id} value={team.id}> {team.name} </option>\n    })\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault()\n    this.props.createJob(this.state)\n  }\n\n\n  render() {\n\n    if (this.props.createJobFlag) {\n      return (\n        <div className=\"container\">\n          <div className=\"form-container\">\n            <h2>Create New Job</h2>\n            <div className=\"form\">\n              <form onSubmit={this.handleSubmit} autoComplete=\"one\">\n\n                  <label htmlFor=\"customer_id\">Customer</label>\n                  <select onChange={this.handleChange} name=\"customer_id\" id=\"customer_id\">\n                  <option value=\"\" />\n                    {this.getCustomerOptions()}\n                  </select>\n\n\n                  <label htmlFor=\"team_id\">Team</label>\n                  <select onChange={this.handleChange} name=\"team_id\" id=\"team_id\">\n                  <option value=\"\"  />\n                    {this.getTeamOptions()}\n                  </select>\n\n                  <label htmlFor=\"street-1\">Street 1</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"street_1\" id=\"street-1\" value={this.state.street_1} />\n     \n                  <label htmlFor=\"street-2\">Street 2</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"street_2\" id=\"street-2\" value={this.state.street_2} />\n \n                  <label htmlFor=\"city\">City</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"city\" id=\"city\" value={this.state.city} />\n  \n                  <label htmlFor=\"zip\">Zip</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"zip\" id=\"zip\" value={this.state.zip} />\n           \n                  <label htmlFor=\"state\">State</label>\n                  <select onChange={this.handleChange} name=\"state\" id=\"state\">\n                    <option value=\"AL\">Alabama</option>\n                    <option value=\"AK\">Alaska</option>\n                    <option value=\"AZ\">Arizona</option>\n                    <option value=\"AR\">Arkansas</option>\n                    <option value=\"CA\">California</option>\n                    <option value=\"CO\">Colorado</option>\n                    <option value=\"CT\">Connecticut</option>\n                    <option value=\"DE\">Delaware</option>\n                    <option value=\"DC\">District Of Columbia</option>\n                    <option value=\"FL\">Florida</option>\n                    <option value=\"GA\">Georgia</option>\n                    <option value=\"HI\">Hawaii</option>\n                    <option value=\"ID\">Idaho</option>\n                    <option value=\"IL\">Illinois</option>\n                    <option value=\"IN\">Indiana</option>\n                    <option value=\"IA\">Iowa</option>\n                    <option value=\"KS\">Kansas</option>\n                    <option value=\"KY\">Kentucky</option>\n                    <option value=\"LA\">Louisiana</option>\n                    <option value=\"ME\">Maine</option>\n                    <option value=\"MD\">Maryland</option>\n                    <option value=\"MA\">Massachusetts</option>\n                    <option value=\"MI\">Michigan</option>\n                    <option value=\"MN\">Minnesota</option>\n                    <option value=\"MS\">Mississippi</option>\n                    <option value=\"MO\">Missouri</option>\n                    <option value=\"MT\">Montana</option>\n                    <option value=\"NE\">Nebraska</option>\n                    <option value=\"NV\">Nevada</option>\n                    <option value=\"NH\">New Hampshire</option>\n                    <option value=\"NJ\">New Jersey</option>\n                    <option value=\"NM\">New Mexico</option>\n                    <option value=\"NY\">New York</option>\n                    <option value=\"NC\">North Carolina</option>\n                    <option value=\"ND\">North Dakota</option>\n                    <option value=\"OH\">Ohio</option>\n                    <option value=\"OK\">Oklahoma</option>\n                    <option value=\"OR\">Oregon</option>\n                    <option value=\"PA\">Pennsylvania</option>\n                    <option value=\"RI\">Rhode Island</option>\n                    <option value=\"SC\">South Carolina</option>\n                    <option value=\"SD\">South Dakota</option>\n                    <option value=\"TN\">Tennessee</option>\n                    <option value=\"TX\">Texas</option>\n                    <option value=\"UT\">Utah</option>\n                    <option value=\"VT\">Vermont</option>\n                    <option value=\"VA\">Virginia</option>\n                    <option value=\"WA\">Washington</option>\n                    <option value=\"WV\">West Virginia</option>\n                    <option value=\"WI\">Wisconsin</option>\n                    <option value=\"WY\">Wyoming</option>\n                  </select>\n                  <label htmlFor=\"price\">\n                    Price leave blank for none\n                  </label>\n                  <input onChange={this.handleChange} type=\"number\"  name=\"price\" id=\"price\" value={this.state.price} />\n   \n                  \n                  <label htmlFor=\"date\" >Date</label>\n                  <input onChange={this.handleDateChange} id=\"date\"  value={this.state.date} type=\"date\" name=\"date\" min=\"\" max=\"\" />\n             \n                  <label htmlFor=\"schedule_time\">Time </label>\n                  <input onChange={this.handleChange} type=\"time\" name=\"schedule_time\" id=\"schedule_time\" value={this.state.schedule_time} />\n             \n                <button className=\"button\" type=\"submit\">\n                  Create\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else return <Redirect to=\"/\"></Redirect>\n  }\n}\n\nexport const mapStateTopProps = ({ customerReducer: { customers}, loginReducer: { user }, jobReducer: {createJobFlag}, teamReducer: {teams} }) => {\n  return {\n    customers,\n    user,\n    createJobFlag,\n    teams\n\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    createJob: (body) => {\n      dispatch(createJobAction(body))\n    }\n  }\n\n}\nexport default withRoleManager(withAuth(connect(mapStateTopProps, mapDispatchToProps)(CreateJob))\n);","import React, { Component } from 'react'\n\nexport default class Locations extends Component {\n  render() {\n    return (\n      <h1>\n        PUT LOCATIONS HERE AT SOME POINT\n      </h1>\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport {\n  getTeamsAction,\n  changeTeamCreateFlagAction,\n  changeTeamEditFlagAction,\n  setTeamAction,\n  removeTeamMemberFromTeam\n} from \"../../actions/team\";\nimport withAuth from '../../hocs/withAuth'\nimport withRoleManager from '../../hocs/withRoleManager'\n\n\nconst TeamUsers = ({ users, removeUser, teamId, getTeam, user}) => {\n  if (users.length > 0){\n    return users.map(user => {\n      return <p key={user.id}>\n          {\" \"}\n        {user.f_name}, {user.l_name[0]}. <span onClick={() => removeUser(user.id, teamId)}><i className=\"fas fa-trash\"></i>\n          </span> |\n        </p>;\n    })\n  } else {\n    return <div></div>\n  }\n}\n\nconst Teams = (props) => {\n  const removeUser  = (userId, teamId ) => {\n    const body ={\n      user_id: userId, \n      team_id: teamId\n    }\n    props.removeTeamMemberFromTeam(body) \n  }\n\n  const teamsJsx = () => {\n    if (props.teams && props.teams.length > 0){\n      return props.teams.map(team => (\n        <div className=\"card-content\" key={team.id}>\n          <h2>{team.name} Team</h2>\n          <TeamUsers\n            users={team.users}\n            removeUser={removeUser}\n            teamId={team.id}\n          />\n          <button className=\"button\"\n            type=\"button\"\n            onClick={() => handleAdd(team)}\n          >\n            Add Member to Team\n          </button>\n        </div>\n      ));\n    }\n  }\n\n  const handleAdd = (team) =>{\n    props.setTeam(team)\n    props.editTeamFlag()\n  }\n\n  const renderTeams = () => {\n    return(\n        <div className=\"card\">\n          <h2>Teams</h2>\n          {teamsJsx()}\n        </div>\n    )\n  }\n\n  const handleClick = () => {\n    props.createTeamFlag();\n  }\n\n  if (!props.editingTeam && !props.creatingTeam){\n    return (\n      <main className=\"container\">\n        <div className=\"form-container\">\n          <div className=\"jobs\">{renderTeams()}</div>\n        </div>\n        <button className=\"button\" onClick={handleClick}>\n        Create New Team\n        </button>\n      </main>\n    )}\n    else if (props.creatingTeam){\n      return <Redirect to=\"/createteam\"></Redirect>\n    }else if (props.editingTeam){\n      return <Redirect to=\"/editteam\"></Redirect>\n    }\n}\n\nconst mapStateToProps = ({teamReducer: {teams, team, editingTeam, creatingTeam }, jobReducer: {jobs}, loginReducer: {user}}) => ({\n  teams,\n  team, \n  editingTeam,\n  creatingTeam,\n  jobs,\n  user\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getTeams: (location_id) => {\n      dispatch(getTeamsAction(location_id));\n    },\n    createTeamFlag: ()=> {\n      dispatch(changeTeamCreateFlagAction());\n    },\n    editTeamFlag: () => {\n      dispatch(changeTeamEditFlagAction());\n    },\n    setTeam: (team) => {\n      dispatch(setTeamAction(team))\n    },\n    removeTeamMemberFromTeam: (id, teamId ) => {\n      dispatch(removeTeamMemberFromTeam(id, teamId));\n    }\n\n  }\n}\n\nexport default withAuth(\n  withRoleManager(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(Teams)\n  )\n);","import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setTeamMemberAction, changeTeamMemberEditFlagAction, createNewTeamMemberFlagAction} from '../../actions/team';\nimport withAuth from '../../hocs/withAuth'\nimport withRoleManager from '../../hocs/withRoleManager'\n\nconst TeamMembers = (props) =>  {\n\n  const handleClick =(teamMember) => {\n    props.setTeamMemberAction(teamMember)\n  }\n  const handleEdit = (teamMember) => {\n    props.setTeamMemberAction(teamMember);\n    props.changeTeamMemberEditFlag();\n\n  }\n\n  const teamMembersJsx = () => {\n    if (props.teamMembers.team_members && props.teamMembers.team_members.length > 0) {\n      return props.teamMembers.team_members.map(teamMember => {\n        return <div key={Date.now()*Math.random()}>\n            {\" \"}\n            <p className= \"card-content\" key={teamMember.id}>\n              {teamMember.f_name} {teamMember.l_name} <span onClick={() => handleClick(teamMember)}>\n                {\" \"}\n              <Link to={`/map/${teamMember.id}`}><i className=\"fas fa-map-marker-alt\"></i></Link>\n              </span>\n              <button className=\"button\" onClick={() => handleEdit(teamMember)} type=\"button\">\n                {\" \"}\n                Edit{\" \"}\n              </button>\n            </p>\n          </div>;\n      });\n    }\n  }\n\n\n  if (!props.teamMembers.teamMemberEditFlag && !props.teamMembers.createTeamMemberFlag) {\n    console.log(props.teamMembers.teamMemberEditFlag)\n    return (\n        <main className=\"container\">\n          <div className=\"form-container\">\n          <div>          \n            <h2>Team Members</h2>\n            {teamMembersJsx()}</div>\n          </div>\n        <button className=\"button\" onClick={props.createNewTeamMemberFlag} >\n          <span>Add Team Member</span>\n        </button>\n        </main>\n    )\n  } else if (props.teamMembers.createTeamMemberFlag) { \n    return <Redirect to=\"/createteammember\"></Redirect>\n  }\n    else {return <Redirect to=\"/editteammember\"></Redirect>\n  }\n\n} \n\n// PLEASE DESTRUCTURE THE STATE SO I DON'T HAVE TO  `props.teamMembers.team_members`\nconst mapStateToProps = (state) => ({\n  user: state.loginReducer.user,\n  teamMembers: state.teamMemberReducer\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setTeamMemberAction: (teamMember) =>{\n      dispatch(setTeamMemberAction(teamMember))\n    },\n    changeTeamMemberEditFlag: ()=> {\n      dispatch(changeTeamMemberEditFlagAction())\n    },\n    createNewTeamMemberFlag: () => {\n      dispatch(createNewTeamMemberFlagAction())\n    }\n  };\n}\n\nexport default withAuth(withRoleManager(connect(mapStateToProps, mapDispatchToProps)(TeamMembers)))","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport withAuth from \"../../hocs/withAuth\";\nimport withRoleManager from \"../../hocs/withRoleManager\"\nimport { editCustomerFlagAction, addCustomerToEditAction, createNewCustomerFlagAction } from \"../../actions/customer\";\n\nconst Customers = (props) => {\n\n  const renderCustomers = () => {\n    if (props.customers.customers && props.customers.customers.length > 0) {\n      return props.customers.customers.map(customer => (\n        <p key={customer.id} className=\"card-content\">\n          {customer.name} {customer.city}{\" \"}\n          <a className=\"button\" href={`tel:${customer.phone}`}><i className=\"fas fa-mobile-alt\"></i> {customer.phone} </a>\n          <button className=\"button\"\n            type=\"button\"\n            onClick={() => handleClick(customer)}\n          >\n            edit\n          </button>\n        </p>\n      ));\n    }\n  }\n\n  const handleClick =(customer)=> {\n    props.editCustomer(customer)\n    props.editCustomerFlag()\n  }\n\n  const createNewCustomer = () => {\n    props.createNewCustomerFlag();\n  }\n\n  if (props.customers.editingCustomer) {\n    return <Redirect to=\"/editcustomer\"></Redirect>\n  }else if (props.customers.createCustomerFlag){\n    return <Redirect to=\"/createcustomer\" />;\n  } else { \n  return (\n      <main className=\"container\">\n        <div className=\"card\">\n          <div>\n            <h2> Customers</h2>\n            {renderCustomers()}</div>\n          </div>\n        <button className=\"button\" onClick={createNewCustomer}>\n          Add New Customer\n        </button>\n      </main>\n    )\n  }\n\n}\n\n\nconst mapStateTopProps = ({ customerReducer: customers, customer, editingCustomer})=>{\n return {\n   customers,\n   customer, \n   editingCustomer\n  }\n}\n \nconst mapDispatchToProps = (dispatch)  => {\n  return {\n    editCustomerFlag: () => {\n      dispatch(editCustomerFlagAction())\n    },\n    editCustomer: (customer) => {\n      dispatch(addCustomerToEditAction(customer));\n    },\n    createNewCustomerFlag: () => {\n      dispatch(createNewCustomerFlagAction())\n    }\n  }\n}\n\nexport default withRoleManager(withAuth(connect(mapStateTopProps, mapDispatchToProps)(Customers)))","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport withAuth from '../hocs/withAuth'\nimport withRoleManager from '../hocs/withRoleManager'\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%',\n  float: 'right'\n};\n\nconst KEY = process.env.REACT_APP_GOOGLEMAPKEY\n\nclass GoogleMap extends Component {\n\n  state = {\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  render() {\n    if (this.props.team_member.lat && this.props.team_member.lon){\n      return (\n        <div className=\"my-map\">\n          <Map google={this.props.google} zoom={14} style={mapStyles} initialCenter={{ lat: this.props.team_member.lat, lng: this.props.team_member.lon }}>     \n        <Marker\n              onClick={this.onMarkerClick}\n              name={this.props.team_member.f_name}\n              lastUpdated={this.props.team_member.upat}\n            />\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n              onClose={this.onClose}\n            >\n              <div>\n                <h4>{this.state.selectedPlace.name}</h4>\n                <h5>Location last updated at</h5>\n                <h5>{this.state.selectedPlace.lastUpdated}</h5>\n              </div>\n            </InfoWindow>\n            </Map>\n        </div>\n      )\n    }else {\n      return (\n          <div className=\"my-map\">\n            No Recent Locations for this user\n          </div>\n      )\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {take: \"that\"}\n}\n\nconst mapStateToProps = ({ teamMemberReducer: { team_member } }) => {\n  return {\n    team_member\n  }\n}\n\n\nexport default withRouter(withRoleManager(withAuth(connect(mapStateToProps, mapDispatchToProps)(GoogleApiWrapper({apiKey: KEY})(GoogleMap)))))","import React from 'react'\n\nexport default function Nomatch({location}) {\n  return (\n    <div>\n      {\"404 Man not found :( \" + location.pathname}\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport {connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport withAuth from '../../hocs/withAuth'\nimport withRoleManager from '../../hocs/withRoleManager'\nimport { editCustomerAction } from '../../actions/customer'\nimport { getTeamMembersAction } from '../../actions/team'\n\nclass EditCustomer extends Component {\n  state={\n\n      name: \"\",\n      poc: \"\",\n      street_1: \"\",\n      street_2: \"\",\n      city: \"\",\n      zip: \"\",\n      state: \"\",\n      phone: \"\",\n      email: \"\",\n      id: \"\",\n      location_id: \"\"\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      ...this.props.customer.customer\n    })\n  }\n\n  handleChange =(event) => {\n    this.setState({\n        [event.target.name]: event.target.value\n    })\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.editCustomer(this.state, this.state.id)\n  }\n  render() {\n    if (this.props.customer.editingCustomer){\n    return  (\n        <div className=\"container\">\n          <h2>\n            EDIT CUSTOMER INFO \n          </h2>\n          <div className=\"form-container\">\n            <div className=\"form\">\n              <form onSubmit={this.handleSubmit}>\n                <div>\n                  <label htmlFor=\"customer-name\">Customer Name</label>\n                  <input onChange={this.handleChange} type=\"text\"  name=\"name\" id=\"customer-name\"  value={this.state.name}/>\n                </div>\n                <div>\n                  <label htmlFor=\"point0of-contact\">Point of Contact</label>\n                  <input onChange={this.handleChange}type=\"text\"  name=\"poc\" id=\"point-of-contact\"  value={this.state.poc}/>\n                </div>\n                <div>\n                  <label htmlFor=\"street-1\">Street 1</label>\n                  <input onChange={this.handleChange}type=\"text\"  name=\"street_1\" id=\"street-1\"  value={this.state.street_1}/>\n                </div>\n                <div>\n                  <label htmlFor=\"street-2\">Street 2</label>\n                  <input onChange={this.handleChange}type=\"text\"  name=\"street_2\" id=\"street-2\"  value={this.state.street_2}/>\n                </div>\n                <div>\n                  <label htmlFor=\"city\">City</label>\n                  <input onChange={this.handleChange}type=\"text\"  name=\"city\" id=\"city\"  value={this.state.city}/>\n                </div>\n                <div>\n                  <label htmlFor=\"zip\">Zip</label>\n                  <input onChange={this.handleChange}type=\"text\"  name=\"zip\" id=\"zip\"  value={this.state.zip}/>\n                </div>\n                  <div>\n                    <label htmlFor=\"jobPaymentSelect\">\n                      State\n                      </label>\n                    <select onChange={this.handleChange}  name=\"state\" id=\"state\" >\n                <option value=\"AL\">Alabama</option>\n                <option value=\"AK\">Alaska</option>\n                <option value=\"AZ\">Arizona</option>\n                <option value=\"AR\">Arkansas</option>\n                <option value=\"CA\">California</option>\n                <option value=\"CO\">Colorado</option>\n                <option value=\"CT\">Connecticut</option>\n                <option value=\"DE\">Delaware</option>\n                <option value=\"DC\">District Of Columbia</option>\n                <option value=\"FL\">Florida</option>\n                <option value=\"GA\">Georgia</option>\n                <option value=\"HI\">Hawaii</option>\n                <option value=\"ID\">Idaho</option>\n                <option value=\"IL\">Illinois</option>\n                <option value=\"IN\">Indiana</option>\n                <option value=\"IA\">Iowa</option>\n                <option value=\"KS\">Kansas</option>\n                <option value=\"KY\">Kentucky</option>\n                <option value=\"LA\">Louisiana</option>\n                <option value=\"ME\">Maine</option>\n                <option value=\"MD\">Maryland</option>\n                <option value=\"MA\">Massachusetts</option>\n                <option value=\"MI\">Michigan</option>\n                <option value=\"MN\">Minnesota</option>\n                <option value=\"MS\">Mississippi</option>\n                <option value=\"MO\">Missouri</option>\n                <option value=\"MT\">Montana</option>\n                <option value=\"NE\">Nebraska</option>\n                <option value=\"NV\">Nevada</option>\n                <option value=\"NH\">New Hampshire</option>\n                <option value=\"NJ\">New Jersey</option>\n                <option value=\"NM\">New Mexico</option>\n                <option value=\"NY\">New York</option>\n                <option value=\"NC\">North Carolina</option>\n                <option value=\"ND\">North Dakota</option>\n                <option value=\"OH\">Ohio</option>\n                <option value=\"OK\">Oklahoma</option>\n                <option value=\"OR\">Oregon</option>\n                <option value=\"PA\">Pennsylvania</option>\n                <option value=\"RI\">Rhode Island</option>\n                <option value=\"SC\">South Carolina</option>\n                <option value=\"SD\">South Dakota</option>\n                <option value=\"TN\">Tennessee</option>\n                <option value=\"TX\">Texas</option>\n                <option value=\"UT\">Utah</option>\n                <option value=\"VT\">Vermont</option>\n                <option value=\"VA\">Virginia</option>\n                <option value=\"WA\">Washington</option>\n                <option value=\"WV\">West Virginia</option>\n                <option value=\"WI\">Wisconsin</option>\n                <option value=\"WY\">Wyoming</option>   \n                    </select>\n                  </div>\n\n                <div>\n                  <label htmlFor=\"customer-phone\">Phone</label>\n                  <input onChange={this.handleChange}type=\"phone\"  name=\"phone\" id=\"customer-phone\"  value={this.state.phone}/> \n                </div>\n                <div>\n                  <label htmlFor=\"customer-email\">Customer email</label>\n                  <input onChange={this.handleChange}type=\"email\"  name=\"email\" id=\"customer-email\"  value={this.state.email}/>\n                </div>\n                      <button className=\"button\" type=\"submit\" >Update</button>\n                </form>\n            </div>\n          </div>\n        </div>\n        )\n    }\n    else return <Redirect to=\"/customers\"></Redirect>\n  }\n}\n\n\nconst mapStateTopProps = ({ customerReducer: customer}) => {\n  return {\n    customer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    editCustomer: (customer, customer_id) => {\n      dispatch(editCustomerAction(customer, customer_id))\n    }\n  }\n}\n\n\n\nexport default withRoleManager(withAuth(connect(mapStateTopProps, mapDispatchToProps)(EditCustomer)))","import React, { Component } from 'react';\nimport {connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport withAuth from '../../hocs/withAuth';\nimport withRoleManager from '../../hocs/withRoleManager';\nimport  { createCustomerAction } from '../../actions/customer'\n\nclass CreateCustomer extends Component {\n  state = {\n    name: \"\",\n    poc: \"\",\n    street_1: \"\",\n    street_2: \"\",\n    city: \"\",\n    zip: \"\",\n    state: \"\",\n    phone: \"\",\n    email: \"\",\n    id: \"\",\n    location_id: \"\"\n  }\n\n  componentDidMount(){\n    console.log(\n      this.props\n    )\n    this.setState({\n      location_id: this.props.user.location.id\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.createCustomer(this.state)\n    return null\n  }\n\n\n  render() {\n\n    if (this.props.createCustomerFlag) {\n      return (\n        <div className=\"container\">\n          <h2>\n            Create New Customer\n          </h2>\n          <div className=\"form-container\">\n            <div className=\"form\">\n              <form onSubmit={this.handleSubmit}>\n                <div>\n                  <label htmlFor=\"customer-name\">Customer Name</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"name\" id=\"customer-name\" value={this.state.name} />\n                </div>\n                <div>\n                  <label htmlFor=\"point0of-contact\">Point of Contact</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"poc\" id=\"point-of-contact\" value={this.state.poc} />\n                </div>\n                <div>\n                  <label htmlFor=\"street-1\">Street 1</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"street_1\" id=\"street-1\" value={this.state.street_1} />\n                </div>\n                <div>\n                  <label htmlFor=\"street-2\">Street 2</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"street_2\" id=\"street-2\" value={this.state.street_2} />\n                </div>\n                <div>\n                  <label htmlFor=\"city\">City</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"city\" id=\"city\" value={this.state.city} />\n                </div>\n                <div>\n                  <label htmlFor=\"zip\">Zip</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"zip\" id=\"zip\" value={this.state.zip} />\n                </div>\n                <div>\n                  <label htmlFor=\"jobPaymentSelect\">\n                    State\n                        </label>\n                  <select onChange={this.handleChange} name=\"state\" id=\"state\" >\n                    <option value=\"AL\">Alabama</option>\n                    <option value=\"AK\">Alaska</option>\n                    <option value=\"AZ\">Arizona</option>\n                    <option value=\"AR\">Arkansas</option>\n                    <option value=\"CA\">California</option>\n                    <option value=\"CO\">Colorado</option>\n                    <option value=\"CT\">Connecticut</option>\n                    <option value=\"DE\">Delaware</option>\n                    <option value=\"DC\">District Of Columbia</option>\n                    <option value=\"FL\">Florida</option>\n                    <option value=\"GA\">Georgia</option>\n                    <option value=\"HI\">Hawaii</option>\n                    <option value=\"ID\">Idaho</option>\n                    <option value=\"IL\">Illinois</option>\n                    <option value=\"IN\">Indiana</option>\n                    <option value=\"IA\">Iowa</option>\n                    <option value=\"KS\">Kansas</option>\n                    <option value=\"KY\">Kentucky</option>\n                    <option value=\"LA\">Louisiana</option>\n                    <option value=\"ME\">Maine</option>\n                    <option value=\"MD\">Maryland</option>\n                    <option value=\"MA\">Massachusetts</option>\n                    <option value=\"MI\">Michigan</option>\n                    <option value=\"MN\">Minnesota</option>\n                    <option value=\"MS\">Mississippi</option>\n                    <option value=\"MO\">Missouri</option>\n                    <option value=\"MT\">Montana</option>\n                    <option value=\"NE\">Nebraska</option>\n                    <option value=\"NV\">Nevada</option>\n                    <option value=\"NH\">New Hampshire</option>\n                    <option value=\"NJ\">New Jersey</option>\n                    <option value=\"NM\">New Mexico</option>\n                    <option value=\"NY\">New York</option>\n                    <option value=\"NC\">North Carolina</option>\n                    <option value=\"ND\">North Dakota</option>\n                    <option value=\"OH\">Ohio</option>\n                    <option value=\"OK\">Oklahoma</option>\n                    <option value=\"OR\">Oregon</option>\n                    <option value=\"PA\">Pennsylvania</option>\n                    <option value=\"RI\">Rhode Island</option>\n                    <option value=\"SC\">South Carolina</option>\n                    <option value=\"SD\">South Dakota</option>\n                    <option value=\"TN\">Tennessee</option>\n                    <option value=\"TX\">Texas</option>\n                    <option value=\"UT\">Utah</option>\n                    <option value=\"VT\">Vermont</option>\n                    <option value=\"VA\">Virginia</option>\n                    <option value=\"WA\">Washington</option>\n                    <option value=\"WV\">West Virginia</option>\n                    <option value=\"WI\">Wisconsin</option>\n                    <option value=\"WY\">Wyoming</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"customer-phone\">Phone</label>\n                  <input onChange={this.handleChange} type=\"phone\" name=\"phone\" id=\"customer-phone\" value={this.state.phone} />\n                </div>\n                <div>\n                  <label htmlFor=\"customer-email\">Customer email</label>\n                  <input onChange={this.handleChange} type=\"email\" name=\"email\" id=\"customer-email\" value={this.state.email} />\n                </div>\n                <button className=\"button\" type=\"submit\">Create</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else return <Redirect to=\"/customers\"></Redirect>\n  }\n}\n\nexport const mapStateTopProps = ({customerReducer: {customer, createCustomerFlag}, loginReducer: {user} }) => {\n  return {\n    customer,\n    createCustomerFlag,\n    user\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    createCustomer: (body) => {\n      dispatch(createCustomerAction(body))\n    }\n  }\n\n}\nexport default withRoleManager(withAuth(connect(mapStateTopProps,mapDispatchToProps)(CreateCustomer))\n);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTeamMemberAction } from '../../actions/team';\nimport { Redirect } from 'react-router-dom';\n\n\nclass EditTeamMember extends Component {\n  state ={\n    f_name: \"\",\n    l_name: \"\",\n    phone: \"\",\n    email: \"\",\n    user_type: \"\"\n  }\n\n  componentDidMount () {\n    this.setState({\n      ...this.props.team_member\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateTeamMember(this.state, this.state.id)\n  }\n  render() {\n    console.log(\"EDIT TEAM MEMBER\", this.props)\n    if (this.props.teamMemberEditFlag) {\n      return (\n          <div className=\"container\">\n            <h2 >EDIT EMPLOYEE INFO</h2>\n            <div className=\"form-container\">\n              <div className=\"form\">\n                <form onSubmit={this.handleSubmit}>\n                  <div>\n                    <label htmlFor=\"name\">First Name</label>\n                    <input onChange={this.handleChange} type=\"text\" name=\"f_name\" id=\"f_name\" value={this.state.f_name} />\n                  </div>\n                  <div>\n                    <label htmlFor=\"name\">Last Name</label>\n                    <input onChange={this.handleChange} type=\"text\" name=\"l_name\" id=\"l_name\" value={this.state.l_name} />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input onChange={this.handleChange} type=\"phone\" name=\"phone\" id=\"phone\" value={this.state.phone} />\n                  </div>\n                  <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleChange} type=\"email\" name=\"email\" id=\"email\" value={this.state.email} />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"teamMemberType\">Team Member Type</label>\n                    <select onChange={this.handleChange}name=\"user_type\" id=\"user_type\">\n                      <option value=\"\" selected></option>\n                      <option value=\"manager\">Manager</option>\n                      <option value=\"employee\">Employee</option>\n                    </select>\n                  </div>\n\n                  <button className =\"button\" type=\"submit\">\n                    Update\n                  </button>\n                </form>\n              </div>\n             </div>\n          </div>\n      )\n    }\n    else return <Redirect to=\"/teammembers\"></Redirect>\n  }\n}\n\n\n\nconst mapStateToProps = ({ teamMemberReducer: team_member}) => {\n  return team_member\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return { updateTeamMember: (teamMember, id) =>{\n    dispatch(updateTeamMemberAction(teamMember, id))\n  } };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(EditTeamMember)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport withAuth from '../../hocs/withAuth';\nimport withRoleManager from '../../hocs/withRoleManager';\nimport { createTeamMemberAction } from '../../actions/team'\n\nclass CreateTeamMember extends Component {\n  state = {\n    f_name: \"\",\n    l_name: \"\",\n    phone: \"\",\n    email: \"\",\n    user_type: \"\",\n    password: \"\",\n    password_c: \"\",\n    location_id: \"\"\n  }\n\n  componentDidMount() {\n    this.setState({\n      location_id: this.props.user.location.id\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    if (this.state.password === this.state.password_c){\n      this.props.createTeamMember(this.state)\n    } else {\n      alert(\"passwords do not match\")\n      return null\n    }\n  }\n\n\n  render() {\n\n    if (this.props.createTeamMemberFlag) {\n      return (\n        <div className=\"container\">\n          <h2>\n            Create New TeamMember\n                </h2>\n          <div className=\"form-container\">\n            <div className=\"form\">\n            <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"f_name\">First Name</label>\n                <input onChange={this.handleChange} type=\"text\" name=\"f_name\" id=\"f_name\" value={this.state.f_name} />\n                <label htmlFor=\"l_name\">Last Name</label>\n                <input onChange={this.handleChange} type=\"text\" name=\"l_name\" id=\"l_name\" value={this.state.l_name} />     \n                <label htmlFor=\"phone\">Phone</label>\n                <input onChange={this.handleChange} type=\"phone\" name=\"phone\" id=\"phone\" value={this.state.phone} />\n                <label htmlFor=\"email\"> email</label>\n                <input onChange={this.handleChange} type=\"email\" name=\"email\" id=\"email\" value={this.state.email} />\n                <label htmlFor=\"password\"> Password</label>\n                <input onChange={this.handleChange} type=\"password\" name=\"password\" id=\"password\" value={this.state.password} />\n                <label htmlFor=\"password_c\"> Confirm password</label>\n                <input onChange={this.handleChange} type=\"password\" name=\"password_c\" id=\"password_c\" value={this.state.password_c} />\n\n                <label htmlFor=\"jobPaymentSelect\">\n                  Team Member Type\n                      </label>\n                <select onChange={this.handleChange} name=\"user_type\" id=\"user_type\" >\n                  <option value=\"employee\">Employee</option>\n                  <option value=\"manager\">Manager</option>\n                </select>\n              <button className=\"button\" type=\"submit\">Create</button>\n            </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else return <Redirect to=\"/teammembers\"></Redirect>\n  }\n}\n\nexport const mapStateTopProps = ({ teamMemberReducer: { team_member, createTeamMemberFlag }, loginReducer: { user } }) => {\n  return {\n    team_member,\n    createTeamMemberFlag,\n    user\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    createTeamMember: (body) => {\n      dispatch(createTeamMemberAction(body))\n    }\n  }\n\n}\nexport default withRoleManager(withAuth(connect(mapStateTopProps, mapDispatchToProps)(CreateTeamMember))\n);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport withAuth from '../../hocs/withAuth';\nimport withRoleManager from '../../hocs/withRoleManager';\nimport { createTeamAction } from '../../actions/team'\n\nclass CreateTeam extends Component {\n  state = {\n    name: \"\",\n    location_id: \"\"\n  }\n\n  componentDidMount() {\n    this.setState({\n      location_id: this.props.user.location.id\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.createTeam(this.state) \n  }\n\n\n  render() {\n\n    if (this.props.creatingTeam) {\n      return (\n        <div className=\"container\" >\n          <h2 >\n            Create New Team\n          </h2>\n          <div className=\"form-container\">\n            <div className=\"form\">\n              <form onSubmit={this.handleSubmit}>\n                <div >\n                  <label htmlFor=\"name\">Team Name</label>\n                  <input onChange={this.handleChange} type=\"text\" name=\"name\" id=\"name\" value={this.state.name} />\n                </div>\n                <button className=\"button\" type=\"submit\">Create</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else return <Redirect to=\"/teams\"></Redirect>\n  }\n}\n\nexport const mapStateTopProps = ({ teamReducer: { team, creatingTeam }, loginReducer: { user } }) => {\n  return {\n    team,\n    creatingTeam,\n    user\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    createTeam: (body) => {\n      dispatch(createTeamAction(body))\n    }\n  }\n\n}\nexport default withRoleManager(withAuth(connect(mapStateTopProps, mapDispatchToProps)(CreateTeam))\n);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport withAuth from '../../hocs/withAuth';\nimport withRoleManager from '../../hocs/withRoleManager';\nimport { addMemberToTeamAction } from \"../../actions/team\";\n\nclass EditTeam extends Component {\n  state = {\n    name: \"\",\n    location_id: \"\",\n    team_id: \"\",\n    user_id: \"\"\n  }\n\n  componentDidMount() {\n    this.setState({\n      location_id: this.props.user.location.id,\n      team_id: this.props.team.id\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  getTeamMembers = () => {\n    return this.props.team_members.map(member => {\n      return <option key={member.id} value={member.id}> {member.f_name}, {member.l_name}</option>\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.addMemberToTeam(this.state)\n  }\n  render() {\n    if (this.props.editingTeam) {\n\n      return (\n        <div>\n          <h2>\n            Add Team Members to Team {this.props.team.name}\n                </h2>\n          <div>\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <label htmlFor=\"team-member-select\">\n                  Choose Team Member to add.\n                      </label>\n                <select onChange={this.handleChange} name=\"user_id\" id=\"user_id\" >\n                  <option value=\"\"></option>\n                  {this.getTeamMembers()}\n                  </select>\n                  </div>\n              <button type=\"submit\">Create</button>\n            </form>\n          </div>\n        </div>\n      )\n    }\n    else return <Redirect to=\"/teams\"></Redirect>\n  }\n}\n\nexport const mapStateTopProps = ({ teamReducer: { team, creatingTeam, editingTeam }, teamMemberReducer: {team_members}, loginReducer: { user } }) => {\n  return {\n    team,\n    creatingTeam,\n    editingTeam,\n    team_members,\n    user\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    addMemberToTeam: (body) => {\n      dispatch(addMemberToTeamAction(body));\n    }\n  }\n\n}\nexport default withRoleManager(withAuth(connect(mapStateTopProps, mapDispatchToProps)(EditTeam))\n);","//COMPANIES ACTION CREATOR \nimport JSONAPIAdapter from '../adapters/ApiAdapter'\nconst COMPANIESAdapter = new JSONAPIAdapter(\"api/v1/companies\");\n\n\nexport const getCompaniesAction = () => {\n  return (dispatch) => {COMPANIESAdapter.getAll()\n    .then(response => {\n      dispatch({ type: \"GET_COMPANIES\", payload: response })\n    })\n  }\n}\n\nexport const createCompanyAction = (body) => {\n  return (dispatch) => {COMPANIESAdapter.createItem(body)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.log(response.json())\n        throw response;\n      }\n    })\n    .then(r => {\n      dispatch({ type: \"UPDATE_USER\", payload: { location: r.locations[0]} })\n    })\n  }\n\n}\n  \n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router'\nimport {updateUserAction} from '../../actions/user'\nimport { createCompanyAction } from '../../actions/companies'\nimport withAuth from '../../hocs/withAuth';\n\nclass CreateCompany extends Component {\n\n  state = {\n    company: {\n      name: \"\",\n      phone: \"\",\n      website: \"\"\n    }, \n    location: {\n      city: \"\",\n      nickname: \"\"\n    },\n    user: {\n      id: \"\"\n    }\n  }\n\n\n\n  handleChangeCompany = (event) => {\n    event.persist()\n    console.log(this.props.user)\n    this.setState(prevState => ({\n      company: {...prevState.company, [event.target.name]: event.target.value}\n    }))\n    this.setState({user: {id: this.props.user.id}})\n    }\n\n  handleChangeLocation = (event) => {\n    event.persist()\n    this.setState(prevState => ({\n      location: { ...prevState.location, [event.target.name]: event.target.value }\n    }))\n    this.setState({ user: { id: this.props.user.id } })\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.createCompany(this.state)\n  }\n  render() {\n\n    if (this.props.user === null || this.props.user.location.id !== 1) {\n      return <Redirect to=\"/\"></Redirect>\n    } else {\n      return (\n        <div>\n          <h2>\n            Create New Company\n                </h2>\n          <div >\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <label htmlFor=\"name\">Company Name</label>\n                <input onChange={this.handleChangeCompany} type=\"text\" minLength=\"4\" name=\"name\" id=\"name\" value={this.state.company.name} />\n              </div>\n              <div>\n                <label htmlFor=\"phone\">Company Primary Phone</label>\n                <input onChange={this.handleChangeCompany} type=\"tel\" pattern=\"[0-9]{10}\" placeholder=\"2015551111\" name=\"phone\" id=\"phone\" value={this.state.company.phone} />\n              </div>\n              <div>\n                <label htmlFor=\"website\"> Company Website</label>\n                <input onChange={this.handleChangeCompany} type=\"website\" name=\"website\" minLength=\"4\" id=\"website\" value={this.state.company.website} />\n              </div>\n\n              <h2>Main Location</h2>\n              <div>\n                <label htmlFor=\"nickname\">Location Nickname</label>\n                <input onChange={this.handleChangeLocation} type=\"text\" minLength=\"4\" name=\"nickname\" id=\"nickname\" value={this.state.location.nickname} />\n              </div>\n              <div>\n                <label htmlFor=\"city\">City</label>\n                <input onChange={this.handleChangeLocation} type=\"text\" minLength=\"4\" name=\"city\" id=\"city\" value={this.state.location.city} />\n              </div>\n              <button type=\"submit\">Create</button>\n            </form>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\n\nconst mapStateToProps = ({ loginReducer: {user}}) => {\n  return {\n    user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUser: (body, userId) => {\n      dispatch(updateUserAction(body, userId))\n    }, \n    createCompany: (body) =>{\n      dispatch(createCompanyAction(body))\n    }\n  }\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(CreateCompany))","//JOIN COMPANY CONTROLLER FOR MANAGERS AND EMPLOYEES NOT FOR OWNERS\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router'\nimport { connect } from 'react-redux'\nimport { getCompaniesAction } from '../../actions/companies'\nimport { updateUserAction } from '../../actions/user'\nimport withAuth from '../../hocs/withAuth';\n\n\n\n//functional component that is outside of the JoinCompany component. It is needed to display locations on this same page (component)\nconst Locations = ({locations}) => {\n  if(locations && locations.length > 0){\n    return locations.map(location => {\n      return <option key={location.id} value={location.id}>Name: {location.nickname}, ID: {location.id}</option>\n    })\n  }else return \"\"\n\n}\n\nclass JoinCompany extends Component {\n\n  state = {\n    companySearch: \"\",\n    foundCompanies: [],\n    chosenCompany: {},\n    chosenLocation: []\n  }\n\n  componentDidMount(){\n    this.props.getCompanies()\n  }\n  \n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    }, this.findCompanies)\n\n  }\n\n  findCompanies = () => {\n    this.setState({\n      foundCompanies: this.props.companies.filter(company => {\n        return company.name.toLowerCase().includes(this.state.companySearch.toLowerCase())\n      }) \n    }) \n  }\n\n  displayCompanies = () => {\n   return this.state.foundCompanies.map(company => {\n     return <option key={company.id} value={company.id}>{company.name}</option>\n   })\n  }\n\n  selectCompany = (event) => {\n    event.persist()\n    this.setState({\n      chosenCompany: this.state.foundCompanies.find(company => company.id === parseInt(event.target.value))\n    })\n  }\n\n  selectLocation = (event) => {\n    this.setState({\n      chosenLocation: [this.state.chosenCompany.locations.find(location => location.id === parseInt(event.target.value))]\n    })\n  }\n\n\n  // This updates the users work location\n  updateUserLocation = () => {\n    const body ={\n      company_id: this.state.chosenCompany.id,\n      location_id: this.state.chosenLocation[0].id\n    }\n    this.props.updateUser(body, this.props.user.id)\n  }\n\n  render() {\n\n    if (this.props.user === null || this.props.user.location.id !== 1) {\n      return <Redirect to=\"/\"></Redirect>\n    } else\n\n      return (\n        <div>\n          <h1>Find Your Company</h1>\n\n            <div>\n              <label htmlFor=\"companySearch\">Type to start searching for your company</label>\n              <input onChange={this.handleChange} name=\"companySearch\" id=\"companySearch\" autoComplete=\"off\"></input>\n              <select size=\"3\" onChange={this.selectCompany} defaultValue=\"\"> {this.displayCompanies()}</select>\n            </div>\n            <h2>Find your main work location</h2>\n            <select size=\"3\" onChange={this.selectLocation} defaultValue=\"\">\n            {this.state.chosenCompany ? <Locations locations={this.state.chosenCompany.locations}></Locations> : <option> Searching...</option>}\n            \n          </select>\n          {this.state.chosenLocation.length > 0 ? <button onClick={this.updateUserLocation} >Go</button> : null} \n        </div>\n      )\n  }\n}\n\nconst mapsStateToProps = ({loginReducer: {user}, companiesReducer: {companies}}) => {\n  return {\n    user, companies\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCompanies: () => {\n      dispatch(getCompaniesAction())\n    },\n    updateUser: (body, userId) => {\n      dispatch(updateUserAction(body, userId))\n    }\n  };\n}\n\nexport default withAuth(connect(mapsStateToProps, mapDispatchToProps)(JoinCompany))\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport { withRouter, Route, Switch } from 'react-router-dom'\n\nimport Navbar from './components/navigation/Navbar'\nimport Signup from './components/navigation/Signup'\nimport Login from './components/navigation/Login'\nimport Home from './components/Home'\nimport Jobs from './components/jobs/Jobs'\nimport CreateJob from './components/jobs/CreateJob'\nimport Locations from './components/Locations'\nimport Teams from './components/teams/Teams'\nimport TeamMembers from './components/teams/TeamMembers'\nimport {\n  getTeamMembersAction,\n  getTeamsAction,\n  changeTeamCreateFlagAction,\n  changeTeamEditFlagAction,\n  setTeamAction,\n  removeTeamMemberFromTeam\n} from \"./actions/team\";\nimport Customers from './components/customers/Customers'\nimport GoogleMap from './components/GoogleMap'\nimport NoMatch from './components/Nomatch'\nimport { fetchCurrentUser } from './actions/user'\nimport EditCustomer from './components/customers/EditCustomer';\nimport CreateCustomer from './components/customers/CreateCustomer';\nimport EditTeamMember from './components/teams/EditTeamMember';\nimport CreateTeamMember from './components/teams/CreateTeamMember';\nimport CreateTeam from './components/teams/CreateTeam';\nimport EditTeam from './components/teams/EditTeam';\nimport CreateCompany from './components/firstlogin/CreateCompany';\nimport JoinCompany from './components/firstlogin/JoinCompany';\nimport './css/styles.css'\n\nfunction App(props) {\n\n  props.user && props.user.location && props.user.location.id && props.getTeamMembers(props.user.location.id)\n\n  props.user && props.user.location && props.user.location.id && props.getTeams(props.user.location.id)\n\n  console.log(props)\n    return <>\n        <Navbar />\n        <div className=\"content\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/jobs\" component={Jobs}></Route>\n          <Route path=\"/createjob\" component={CreateJob}></Route>\n          <Route path=\"/locations\" component={Locations}></Route>\n          <Route path=\"/teams\" render={() => <Teams />}></Route>\n          <Route path=\"/createteam\" component={CreateTeam}></Route>\n          <Route path=\"/editteam\" component={EditTeam}></Route>\n          <Route path=\"/teammembers\" render={()=><TeamMembers/>}></Route>\n          <Route path=\"/editteammember\" component={EditTeamMember}></Route>\n          <Route path=\"/createteammember\" component={CreateTeamMember}></Route>\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/editcustomer\" component={EditCustomer}></Route>\n          <Route path=\"/createcustomer\" component={CreateCustomer}></Route>\n          <Route path=\"/createcompany\" component={CreateCompany}></Route>\n          <Route path=\"/joincompany\" component={JoinCompany}></Route>\n          <Route path=\"/createcompany\" component={CreateCompany}></Route>\n          <Route path=\"/map/:id\" component={GoogleMap}></Route>\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n      </>;\n}\n\n  const mapsStateToProps = (state) => ({\n    user: state.loginReducer.user\n  })\n\n  const mapDispatchToProps = (dispatch) => {\n    return { \n      fetchCurrentUser: () => dispatch(fetchCurrentUser()) ,\n      getTeamMembers: (location_id) => {\n        dispatch(getTeamMembersAction(location_id));\n      }, \n      getTeams: (location_id) => dispatch(getTeamsAction(location_id))\n    }\n  }\n\nexport default\n  withRouter(connect(mapsStateToProps,mapDispatchToProps)(App));\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const ADD_LOCATION   = \"ADD_LOCATION\";\n\n// LOGIN REDUCER \nexport const ADD_USER             = \"ADD_USER\";\nexport const UPDATE_USER          = \"UPDATE_USER\";\nexport const SET_CURRENT_USER     = \"SET_CURRENT_USER\";\nexport const AUTHENTICATING_USER  = \"AUTHENTICATING_USER\";\nexport const AUTHENTICATED_USER   = \"AUTHENTICATED_USER\";\nexport const FAILED_LOGIN         = \"FAILED_LOGIN\";\nexport const LOG_OUT              = \"LOG_OUT\";\n\n//JOB REDUCER \nexport const ADD_JOB        = \"ADD_JOB\"\nexport const EDIT_JOB       = \"EDIT_JOB\";\nexport const UPDATE_JOB     = \"UPDATE_JOB\"\nexport const GET_JOBS       = \"GET_JOBS\";\nexport const GET_WEEK       = \"GET_WEEK\";\nexport const CREATE_JOB_FLAG= \"CREATE_JOB_FLAG\"\nexport const CREATE_JOB     = \"CREATE_JOB\";\n\n//TEAMS REDUCER\nexport const GET_TEAMS  = \"GET_TEAMS\";\nexport const SET_TEAM = \"SET_TEAM\";\nexport const CHANGE_TEAM_EDIT_FLAG = \"CHANGE_TEAM_EDIT_FLAG\";\nexport const EDIT_TEAM = \"EDIT_TEAM\"\nexport const CHANGE_TEAM_CREATE_FLAG = \"CHANGE_TEAM_CREATE_FLAG\";\nexport const CREATE_TEAM = \"CREATE_TEAM\";\n\n\n//TEAM MEMBER REDUCER \nexport const GET_TEAM_MEMBERS = \"GET_TEAM_MEMBERS\";\nexport const SET_TEAM_MEMBER  = \"SET_TEAM_MEMBER\";\nexport const EDIT_TEAM_MEMBER = \"EDIT_TEAM_MEMBER\";\nexport const CHANGE_TEAM_MEMBER_EDIT_FLAG = \"CHANGE_TEAM_MEMBER_EDIT_FLAG\";\nexport const CREATE_TEAM_MEMBER_FLAG = \"CREATE_TEAM_MEMBER_FLAG\";\nexport const CREATE_TEAM_MEMBER = \"CREATE_TEAM_MEMBER\";\n\n\n//CUSTOMER REDUCER\nexport const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const EDIT_CUSTOMER_FLAG = \"EDIT_CUSTOMER_FLAG\";\nexport const EDIT_CUSTOMER = \"EDIT_CUSTOMER\";\nexport const ADD_CUSTOMER_TO_EDIT = \"ADD_CUSTOMER_TO_EDIT\";\nexport const CREATE_CUSTOMER_FLAG = \"CREATE_CUSTOMER_FLAG\";\nexport const CREATE_CUSTOMER = \"CREATE_CUSTOMER\";\n\n//COMPANIES REDUCER \nexport const GET_COMPANIES = \"GET_COMPANIES\";\nexport const ADD_COMPANY = \"ADD_COMPANY\";","import { ADD_USER, SET_CURRENT_USER, AUTHENTICATING_USER, AUTHENTICATED_USER, FAILED_LOGIN, LOG_OUT, UPDATE_USER} from './types'\n\nconst initialState = {\n  JWTToken: \"\",\n  authenticatingUser: false,\n  loggedIn: false,\n  failedLogin: false,\n  user: null,\n  error: \"\"\n}\nconst  loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      //action.payload { username: 'Chandler Bing', bio: 'my user bio', avatar: 'some image url' }\n      return { ...state, user: action.payload, loggedIn: true, authenticatingUser: false }\n\n    case AUTHENTICATING_USER: //tells the app we're fetching\n      return { ...state, authenticatingUser: true }\n\n    case AUTHENTICATED_USER:\n      return { ...state, authenticatingUser: false }\n\n    case FAILED_LOGIN: //for error handling\n      return {\n        ...state,\n        failedLogin: true,\n        error: action.payload,\n        authenticatingUser: false\n      }\n\n    case ADD_USER:\n      return { ...state, users: [...state.users, action.payload] };\n\n    case LOG_OUT:\n      return initialState;\n\n      case UPDATE_USER: \n      return {...state, user: action.payload}\n\n    default:\n      return state;\n  }\n}\n\nexport default loginReducer\n\n\n\n","import { ADD_LOCATION } from './types'\n\nconst initialState = {\n  users: [],\n  phone: \"\",\n  website: \"\",\n  name: \"\",\n  locations: [],\n\n};\n\nexport default function companyReducer(state = initialState, action) {\n  switch(action.type) {\n    case ADD_LOCATION: \n      return {...state, locations: [...state.locations, action.payload]}    \n    default: \n      return state\n  }\n}\n","import { ADD_JOB, EDIT_JOB, GET_JOBS, UPDATE_JOB, GET_WEEK, CREATE_JOB_FLAG, CREATE_JOB} from './types'\n\nconst initialState = {\n  jobs: [],\n  editingJob: {},\n  jobForm: false,\n  createJobFlag: false\n}\n\n\nconst jobReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Adds one job to the end of jobs array job object\n    case ADD_JOB:\n      return { ...state, jobs: [...state.jobs.slice(0), action.payload] };\n      //GET JOBS FOR EMPLOYEE VIEW ONLY\n    case GET_JOBS:\n      return { ...initialState, jobs: action.payload }\n      //jobs gets overwritten with action.payload which should be all the jobs in a 7 day period.\n    case GET_WEEK:\n      return  {jobs: [...initialState.jobs, ...action.payload], editingJob: {...state.editingJob}, jobForm: false, createJob: false}\n      //jobs array keeps old state editingJob gets the value of a selected jobObject which is what renders to editjob form\n    case EDIT_JOB:\n      return { jobs: [...state.jobs], editingJob: action.payload, jobForm: true }\n      //replaces the updated job in our state's jobs array.\n    case UPDATE_JOB:\n       return { jobs: state.jobs.filter(job => job.id !== action.payload.id).concat(action.payload), editingJob: initialState.editingJob, jobForm: false}\n    case CREATE_JOB_FLAG: \n       return {...state, jobForm: false, createJobFlag: true}\n    case CREATE_JOB: \n      return { ...state, jobs: [...state.jobs, action.payload], createJobFlag: false}\n    default:\n      return state;\n  }\n\n}\n\nexport default jobReducer;\n\n\n\n\n\n","import { GET_TEAMS, SET_TEAM, CHANGE_TEAM_EDIT_FLAG, EDIT_TEAM, CHANGE_TEAM_CREATE_FLAG, CREATE_TEAM } from './types'\n\nconst initialState = {\n teams: [],\n team: {},\n editingTeam: false,\n creatingTeam: false, \n}\n\nconst teamReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TEAMS:\n      return {...state, teams: action.payload}\n   \n    case SET_TEAM: \n      return { ...state, team: action.payload }\n   \n    case CHANGE_TEAM_EDIT_FLAG:\n      return { ...state, editingTeam: true }\n\n    case EDIT_TEAM:\n      return {\n        teams: state.teams\n          .filter(team => team.id !== action.payload.id)\n          .concat(\n            action.payload\n          ), team: initialState.team, editingTeam: false\n      };\n      case CHANGE_TEAM_CREATE_FLAG:\n        return { ...state, creatingTeam: true }\n\n      case CREATE_TEAM:\n        return { ...state, teams: [...state.teams, action.payload], creatingTeam: false }\n      \n      default:\n        return state;\n  }\n}\n\nexport default teamReducer;\n\n\n","import {\n  GET_TEAM_MEMBERS,\n  SET_TEAM_MEMBER,\n  EDIT_TEAM_MEMBER,\n  CHANGE_TEAM_MEMBER_EDIT_FLAG,\n  CREATE_TEAM_MEMBER_FLAG,\n  CREATE_TEAM_MEMBER\n} from \"./types\";\n\nconst initialState = {\n  team_members: [],\n  team_member: {},\n  teamMemberEditFlag: false,\n  createTeamMemberFlag: false,\n}\n\nconst teamMemberReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TEAM_MEMBERS:\n      return {...state, team_members: action.payload}\n    \n    case SET_TEAM_MEMBER: \n      return {...state, team_member: action.payload}\n\n    case CHANGE_TEAM_MEMBER_EDIT_FLAG: \n      return {...state, teamMemberEditFlag: true}\n    \n    case EDIT_TEAM_MEMBER:\n      return {\n        team_members: state.team_members\n          .filter(team_member => team_member.id !== action.payload.id)\n          .concat(\n            action.payload\n          ), team_member: initialState.team_member, teamMemberEditFlag: false };\n\n    case CREATE_TEAM_MEMBER_FLAG:\n      return { ...state, createTeamMemberFlag: true }\n\n    case CREATE_TEAM_MEMBER:\n      return { ...state, team_members: [...state.team_members, action.payload], createTeamMemberFlag: false }\n      \n    default:\n      return state;\n  }\n}\n\nexport default teamMemberReducer;\n\n\n","import {\n  GET_CUSTOMERS,\n  EDIT_CUSTOMER_FLAG,\n  EDIT_CUSTOMER,\n  ADD_CUSTOMER_TO_EDIT,\n  CREATE_CUSTOMER_FLAG,\n  CREATE_CUSTOMER\n} from \"./types\";\n\nconst initialState = {\n  customers: [],\n  customer: {},\n  editingCustomer: false, \n  createCustomerFlag: false\n}\n\n\nconst customerReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case GET_CUSTOMERS:\n      return {...initialState, customers: action.payload}\n\n    case EDIT_CUSTOMER_FLAG: \n      return {...state, editingCustomer: true}\n\n    case EDIT_CUSTOMER: \n      return { customers: state.customers.filter(customer => customer.id !== action.payload.id).concat(action.payload), customer: initialState.customer, editingCustomer: false }\n\n    case ADD_CUSTOMER_TO_EDIT:\n      return {...state, customer: action.payload}\n\n    case CREATE_CUSTOMER_FLAG: \n      return {...state, createCustomerFlag: true}\n\n    case CREATE_CUSTOMER: \n      return {...state, customers: [...state.customers, action.payload], createCustomerFlag: false}\n      \n    default:\n      return state;\n  }\n};\n\nexport default customerReducer;\n","import { GET_COMPANIES, ADD_COMPANY } from './types'\n\nconst initialState = {\n  companies: []\n}\n\nconst companiesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    \n    case GET_COMPANIES:\n      return { ...initialState, companies:  action.payload };\n\n      case ADD_COMPANY: \n        return {...state, companies: [...state.companies, action.payload]}\n    default:\n      return state;\n      \n  }\n}\n\nexport default companiesReducer","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from \"redux-thunk\";\n\nimport loginReducer from './reducers/loginReducer';\nimport companyReducer from './reducers/companyReducer';\nimport jobReducer from  './reducers/jobReducer'\nimport teamReducer from './reducers/teamReducer'\nimport teamMemberReducer from './reducers/teamMemberReducer'\nimport customerReducer from './reducers/customerReducer'\nimport companiesReducer from './reducers/companiesReducer'\n\nconst rootReducer = combineReducers({\n  companyReducer,\n  loginReducer,\n  jobReducer,\n  teamReducer,\n  teamMemberReducer,\n  customerReducer,\n  companiesReducer\n});\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}